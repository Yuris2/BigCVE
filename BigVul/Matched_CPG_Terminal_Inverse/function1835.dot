digraph "&lt;global&gt;" {
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(UNKNOWN,poly_in(PG_FUNCTION_ARGS)
{
	char	   *str = PG_...,poly_in(PG_FUNCTION_ARGS)
{
	char	   *str = PG_...)<SUB>1</SUB>>];
vulnerable_9 [label="<(LOCAL,POLYGON* poly: POLYGON*)<SUB>4</SUB>>"];
vulnerable_10 [label="<(LOCAL,int npts: int)<SUB>5</SUB>>"];
vulnerable_11 [label="<(LOCAL,int size: int)<SUB>6</SUB>>"];
vulnerable_12 [label="<(LOCAL,int isopen: int)<SUB>7</SUB>>"];
vulnerable_13 [label="<(LOCAL,char* s: char*)<SUB>8</SUB>>"];
vulnerable_14 [label=<(UNKNOWN,if ((npts = pair_count(str, ',')) &lt;= 0)
		erepo...,if ((npts = pair_count(str, ',')) &lt;= 0)
		erepo...)<SUB>10</SUB>>];
vulnerable_15 [label=<(UNKNOWN,size = offsetof(POLYGON, p[0]) +sizeof(poly-&gt;p[...,size = offsetof(POLYGON, p[0]) +sizeof(poly-&gt;p[...)<SUB>15</SUB>>];
vulnerable_16 [label=<(UNKNOWN,poly = (POLYGON *) palloc0(size);,poly = (POLYGON *) palloc0(size);)<SUB>16</SUB>>];
vulnerable_17 [label=<(UNKNOWN,SET_VARSIZE(poly, size);,SET_VARSIZE(poly, size);)<SUB>18</SUB>>];
vulnerable_18 [label=<(UNKNOWN,poly-&gt;npts = npts;,poly-&gt;npts = npts;)<SUB>19</SUB>>];
vulnerable_19 [label=<(UNKNOWN,if ((!path_decode(FALSE, npts, str, &amp;isopen, &amp;s...,if ((!path_decode(FALSE, npts, str, &amp;isopen, &amp;s...)<SUB>21</SUB>>];
vulnerable_20 [label="<(LOCAL,make_bound_box : make_bound_box)<SUB>27</SUB>>"];
vulnerable_21 [label="<(LOCAL,PG_RETURN_POLYGON_P : PG_RETURN_POLYGON_P)<SUB>29</SUB>>"];
vulnerable_22 [label=<(UNKNOWN,},})<SUB>30</SUB>>];
vulnerable_23 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_38 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_39 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_40 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(UNKNOWN,poly_in(PG_FUNCTION_ARGS)
{
	char	   *str = PG_...,poly_in(PG_FUNCTION_ARGS)
{
	char	   *str = PG_...)<SUB>1</SUB>>];
fixed_9 [label="<(LOCAL,POLYGON* poly: POLYGON*)<SUB>4</SUB>>"];
fixed_10 [label="<(LOCAL,int npts: int)<SUB>5</SUB>>"];
fixed_11 [label="<(LOCAL,int size: int)<SUB>6</SUB>>"];
fixed_12 [label="<(LOCAL,int base_size: int)<SUB>7</SUB>>"];
fixed_13 [label="<(LOCAL,int isopen: int)<SUB>8</SUB>>"];
fixed_14 [label="<(LOCAL,char* s: char*)<SUB>9</SUB>>"];
fixed_15 [label=<(UNKNOWN,if ((npts = pair_count(str, ',')) &lt;= 0)
		erepo...,if ((npts = pair_count(str, ',')) &lt;= 0)
		erepo...)<SUB>11</SUB>>];
fixed_16 [label=<(UNKNOWN,base_size = sizeof(poly-&gt;p[0]) * npts;,base_size = sizeof(poly-&gt;p[0]) * npts;)<SUB>16</SUB>>];
fixed_17 [label=<(UNKNOWN,size = offsetof(POLYGON, p[0]) + base_size;,size = offsetof(POLYGON, p[0]) + base_size;)<SUB>17</SUB>>];
fixed_18 [label=<(UNKNOWN,if (base_size / npts != sizeof(poly-&gt;p[0]) || s...,if (base_size / npts != sizeof(poly-&gt;p[0]) || s...)<SUB>20</SUB>>];
fixed_19 [label=<(UNKNOWN,poly = (POLYGON *) palloc0(size);,poly = (POLYGON *) palloc0(size);)<SUB>25</SUB>>];
fixed_20 [label=<(UNKNOWN,SET_VARSIZE(poly, size);,SET_VARSIZE(poly, size);)<SUB>27</SUB>>];
fixed_21 [label=<(UNKNOWN,poly-&gt;npts = npts;,poly-&gt;npts = npts;)<SUB>28</SUB>>];
fixed_22 [label=<(UNKNOWN,if ((!path_decode(FALSE, npts, str, &amp;isopen, &amp;s...,if ((!path_decode(FALSE, npts, str, &amp;isopen, &amp;s...)<SUB>30</SUB>>];
fixed_23 [label="<(LOCAL,make_bound_box : make_bound_box)<SUB>36</SUB>>"];
fixed_24 [label="<(LOCAL,PG_RETURN_POLYGON_P : PG_RETURN_POLYGON_P)<SUB>38</SUB>>"];
fixed_25 [label=<(UNKNOWN,},})<SUB>39</SUB>>];
fixed_26 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_41 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_42 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_43 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_23  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_8  [key=0, label="CFG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_10  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_11  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_12  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_13  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_14  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_17  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_18  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_19  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_20  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_21  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_22  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_14  [key=0, label="CFG: "];
vulnerable_14 -> vulnerable_15  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_16  [key=0, label="CFG: "];
vulnerable_16 -> vulnerable_17  [key=0, label="CFG: "];
vulnerable_17 -> vulnerable_18  [key=0, label="CFG: "];
vulnerable_18 -> vulnerable_19  [key=0, label="CFG: "];
vulnerable_19 -> vulnerable_22  [key=0, label="CFG: "];
vulnerable_22 -> vulnerable_23  [key=0, label="CFG: "];
vulnerable_38 -> vulnerable_39  [key=0, label="AST: "];
vulnerable_38 -> vulnerable_40  [key=0, label="AST: "];
vulnerable_38 -> vulnerable_40  [key=1, label="CFG: "];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_26  [key=0, label="AST: "];
fixed_6 -> fixed_8  [key=0, label="CFG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_7 -> fixed_9  [key=0, label="AST: "];
fixed_7 -> fixed_10  [key=0, label="AST: "];
fixed_7 -> fixed_11  [key=0, label="AST: "];
fixed_7 -> fixed_12  [key=0, label="AST: "];
fixed_7 -> fixed_13  [key=0, label="AST: "];
fixed_7 -> fixed_14  [key=0, label="AST: "];
fixed_7 -> fixed_15  [key=0, label="AST: "];
fixed_7 -> fixed_16  [key=0, label="AST: "];
fixed_7 -> fixed_17  [key=0, label="AST: "];
fixed_7 -> fixed_18  [key=0, label="AST: "];
fixed_7 -> fixed_19  [key=0, label="AST: "];
fixed_7 -> fixed_20  [key=0, label="AST: "];
fixed_7 -> fixed_21  [key=0, label="AST: "];
fixed_7 -> fixed_22  [key=0, label="AST: "];
fixed_7 -> fixed_23  [key=0, label="AST: "];
fixed_7 -> fixed_24  [key=0, label="AST: "];
fixed_7 -> fixed_25  [key=0, label="AST: "];
fixed_8 -> fixed_15  [key=0, label="CFG: "];
fixed_9 -> vulnerable_6  [key=0];
fixed_10 -> vulnerable_6  [key=0];
fixed_11 -> vulnerable_6  [key=0];
fixed_12 -> vulnerable_6  [key=0];
fixed_13 -> vulnerable_6  [key=0];
fixed_14 -> vulnerable_6  [key=0];
fixed_15 -> fixed_16  [key=0, label="CFG: "];
fixed_16 -> fixed_17  [key=0, label="CFG: "];
fixed_17 -> fixed_18  [key=0, label="CFG: "];
fixed_18 -> fixed_19  [key=0, label="CFG: "];
fixed_19 -> fixed_20  [key=0, label="CFG: "];
fixed_20 -> fixed_21  [key=0, label="CFG: "];
fixed_21 -> fixed_22  [key=0, label="CFG: "];
fixed_22 -> fixed_25  [key=0, label="CFG: "];
fixed_23 -> vulnerable_6  [key=0];
fixed_24 -> vulnerable_6  [key=0];
fixed_25 -> fixed_26  [key=0, label="CFG: "];
fixed_26 -> vulnerable_6  [key=0];
fixed_41 -> fixed_42  [key=0, label="AST: "];
fixed_41 -> fixed_43  [key=0, label="AST: "];
fixed_41 -> fixed_43  [key=1, label="CFG: "];
fixed_42 -> vulnerable_6  [key=0];
fixed_43 -> vulnerable_6  [key=0];
}
