digraph "StopSpeaking" {
vulnerable_134 [label=<(METHOD,&lt;operator&gt;.indirection)>];
vulnerable_135 [label=<(PARAM,p1)>];
vulnerable_136 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_137 [label=<(METHOD_RETURN,ANY)>];
vulnerable_154 [label=<(METHOD,Times)>];
vulnerable_155 [label=<(PARAM,p1)>];
vulnerable_156 [label=<(PARAM,p2)>];
vulnerable_157 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_158 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(METHOD,SetSpeechSynthesisLibraryExpectations)<SUB>1</SUB>>];
vulnerable_9 [label=<(BLOCK,{
  InSequence s;
   EXPECT_CALL(*mock_speech_s...,{
  InSequence s;
   EXPECT_CALL(*mock_speech_s...)<SUB>1</SUB>>];
vulnerable_10 [label="<(LOCAL,InSequence s: InSequence)<SUB>2</SUB>>"];
vulnerable_11 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
vulnerable_12 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
vulnerable_13 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
vulnerable_14 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
vulnerable_15 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
vulnerable_16 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>3</SUB>>];
vulnerable_17 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
vulnerable_18 [label=<(StopSpeaking,StopSpeaking())<SUB>3</SUB>>];
vulnerable_19 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>3</SUB>>];
vulnerable_20 [label=<(Return,Return(true))<SUB>4</SUB>>];
vulnerable_21 [label=<(LITERAL,true,Return(true))<SUB>4</SUB>>];
vulnerable_22 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>3</SUB>>];
vulnerable_23 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>6</SUB>>];
vulnerable_24 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>6</SUB>>];
vulnerable_25 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>6</SUB>>];
vulnerable_26 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>6</SUB>>];
vulnerable_27 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>6</SUB>>];
vulnerable_28 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>6</SUB>>];
vulnerable_29 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>6</SUB>>];
vulnerable_30 [label=<(Speak,Speak(_))<SUB>6</SUB>>];
vulnerable_31 [label=<(IDENTIFIER,_,Speak(_))<SUB>6</SUB>>];
vulnerable_32 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>6</SUB>>];
vulnerable_33 [label=<(Return,Return(true))<SUB>7</SUB>>];
vulnerable_34 [label=<(LITERAL,true,Return(true))<SUB>7</SUB>>];
vulnerable_35 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>6</SUB>>];
vulnerable_36 [label=<(WillRepeatedly,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>9</SUB>>];
vulnerable_37 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>9</SUB>>];
vulnerable_38 [label=<(Times,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>9</SUB>>];
vulnerable_39 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>9</SUB>>];
vulnerable_40 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>9</SUB>>];
vulnerable_41 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>9</SUB>>];
vulnerable_42 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>9</SUB>>];
vulnerable_43 [label=<(IsSpeaking,IsSpeaking())<SUB>9</SUB>>];
vulnerable_44 [label=<(FIELD_IDENTIFIER,Times,Times)<SUB>9</SUB>>];
vulnerable_45 [label=<(AnyNumber,AnyNumber())<SUB>10</SUB>>];
vulnerable_46 [label=<(FIELD_IDENTIFIER,WillRepeatedly,WillRepeatedly)<SUB>9</SUB>>];
vulnerable_47 [label=<(Return,Return(true))<SUB>11</SUB>>];
vulnerable_48 [label=<(LITERAL,true,Return(true))<SUB>11</SUB>>];
vulnerable_49 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>12</SUB>>];
vulnerable_50 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>12</SUB>>];
vulnerable_51 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>12</SUB>>];
vulnerable_52 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>12</SUB>>];
vulnerable_53 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>12</SUB>>];
vulnerable_54 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>12</SUB>>];
vulnerable_55 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>12</SUB>>];
vulnerable_56 [label=<(StopSpeaking,StopSpeaking())<SUB>12</SUB>>];
vulnerable_57 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>12</SUB>>];
vulnerable_58 [label=<(Return,Return(true))<SUB>13</SUB>>];
vulnerable_59 [label=<(LITERAL,true,Return(true))<SUB>13</SUB>>];
vulnerable_60 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>12</SUB>>];
vulnerable_61 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>15</SUB>>];
vulnerable_62 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>15</SUB>>];
vulnerable_63 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>15</SUB>>];
vulnerable_64 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>15</SUB>>];
vulnerable_65 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>15</SUB>>];
vulnerable_66 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>15</SUB>>];
vulnerable_67 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>15</SUB>>];
vulnerable_68 [label=<(Speak,Speak(_))<SUB>15</SUB>>];
vulnerable_69 [label=<(IDENTIFIER,_,Speak(_))<SUB>15</SUB>>];
vulnerable_70 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>15</SUB>>];
vulnerable_71 [label=<(Return,Return(true))<SUB>16</SUB>>];
vulnerable_72 [label=<(LITERAL,true,Return(true))<SUB>16</SUB>>];
vulnerable_73 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>15</SUB>>];
vulnerable_74 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_75 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_76 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_77 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_78 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_79 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_80 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_81 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_82 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_83 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>18</SUB>>];
vulnerable_84 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>18</SUB>>];
vulnerable_85 [label=<(IsSpeaking,IsSpeaking())<SUB>18</SUB>>];
vulnerable_86 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>18</SUB>>];
vulnerable_87 [label=<(Return,Return(true))<SUB>19</SUB>>];
vulnerable_88 [label=<(LITERAL,true,Return(true))<SUB>19</SUB>>];
vulnerable_89 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>18</SUB>>];
vulnerable_90 [label=<(Return,Return(true))<SUB>20</SUB>>];
vulnerable_91 [label=<(LITERAL,true,Return(true))<SUB>20</SUB>>];
vulnerable_92 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>18</SUB>>];
vulnerable_93 [label=<(Return,Return(false))<SUB>21</SUB>>];
vulnerable_94 [label=<(LITERAL,false,Return(false))<SUB>21</SUB>>];
vulnerable_95 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>18</SUB>>];
vulnerable_96 [label=<(METHOD_RETURN,void)<SUB>1</SUB>>];
vulnerable_98 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_159 [label=<(METHOD,IsSpeaking)>];
vulnerable_160 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_161 [label=<(METHOD_RETURN,ANY)>];
vulnerable_119 [label=<(METHOD,&lt;operator&gt;.fieldAccess)>];
vulnerable_120 [label=<(PARAM,p1)>];
vulnerable_121 [label=<(PARAM,p2)>];
vulnerable_122 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_123 [label=<(METHOD_RETURN,ANY)>];
vulnerable_149 [label=<(METHOD,WillRepeatedly)>];
vulnerable_150 [label=<(PARAM,p1)>];
vulnerable_151 [label=<(PARAM,p2)>];
vulnerable_152 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_153 [label=<(METHOD_RETURN,ANY)>];
vulnerable_145 [label=<(METHOD,Speak)>];
vulnerable_146 [label=<(PARAM,p1)>];
vulnerable_147 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_148 [label=<(METHOD_RETURN,ANY)>];
vulnerable_141 [label=<(METHOD,Return)>];
vulnerable_142 [label=<(PARAM,p1)>];
vulnerable_143 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_144 [label=<(METHOD_RETURN,ANY)>];
vulnerable_129 [label=<(METHOD,EXPECT_CALL)>];
vulnerable_130 [label=<(PARAM,p1)>];
vulnerable_131 [label=<(PARAM,p2)>];
vulnerable_132 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_133 [label=<(METHOD_RETURN,ANY)>];
vulnerable_124 [label=<(METHOD,WillOnce)>];
vulnerable_125 [label=<(PARAM,p1)>];
vulnerable_126 [label=<(PARAM,p2)>];
vulnerable_127 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_128 [label=<(METHOD_RETURN,ANY)>];
vulnerable_115 [label=<(METHOD,RetiresOnSaturation)>];
vulnerable_116 [label=<(PARAM,p1)>];
vulnerable_117 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_118 [label=<(METHOD_RETURN,ANY)>];
vulnerable_109 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_110 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_111 [label=<(METHOD_RETURN,ANY)>];
vulnerable_138 [label=<(METHOD,StopSpeaking)>];
vulnerable_139 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_140 [label=<(METHOD_RETURN,ANY)>];
vulnerable_162 [label=<(METHOD,AnyNumber)>];
vulnerable_163 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_164 [label=<(METHOD_RETURN,ANY)>];
fixed_159 [label=<(METHOD,&lt;operator&gt;.indirection)>];
fixed_160 [label=<(PARAM,p1)>];
fixed_161 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_162 [label=<(METHOD_RETURN,ANY)>];
fixed_178 [label=<(METHOD,IsSpeaking)>];
fixed_179 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_180 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(METHOD,SetSpeechSynthesisLibraryExpectations)<SUB>1</SUB>>];
fixed_9 [label=<(BLOCK,{
  InSequence s;
   EXPECT_CALL(*mock_speech_s...,{
  InSequence s;
   EXPECT_CALL(*mock_speech_s...)<SUB>1</SUB>>];
fixed_10 [label="<(LOCAL,InSequence s: InSequence)<SUB>2</SUB>>"];
fixed_11 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
fixed_12 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
fixed_13 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
fixed_14 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
fixed_15 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
fixed_16 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>3</SUB>>];
fixed_17 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>3</SUB>>];
fixed_18 [label=<(StopSpeaking,StopSpeaking())<SUB>3</SUB>>];
fixed_19 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>3</SUB>>];
fixed_20 [label=<(Return,Return(true))<SUB>4</SUB>>];
fixed_21 [label=<(LITERAL,true,Return(true))<SUB>4</SUB>>];
fixed_22 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>3</SUB>>];
fixed_23 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>6</SUB>>];
fixed_24 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>6</SUB>>];
fixed_25 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>6</SUB>>];
fixed_26 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>6</SUB>>];
fixed_27 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>6</SUB>>];
fixed_28 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>6</SUB>>];
fixed_29 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>6</SUB>>];
fixed_30 [label=<(SetSpeakProperties,SetSpeakProperties(_))<SUB>6</SUB>>];
fixed_31 [label=<(IDENTIFIER,_,SetSpeakProperties(_))<SUB>6</SUB>>];
fixed_32 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>6</SUB>>];
fixed_33 [label=<(Return,Return(true))<SUB>7</SUB>>];
fixed_34 [label=<(LITERAL,true,Return(true))<SUB>7</SUB>>];
fixed_35 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>6</SUB>>];
fixed_36 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>9</SUB>>];
fixed_37 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>9</SUB>>];
fixed_38 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>9</SUB>>];
fixed_39 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>9</SUB>>];
fixed_40 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>9</SUB>>];
fixed_41 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>9</SUB>>];
fixed_42 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>9</SUB>>];
fixed_43 [label=<(Speak,Speak(_))<SUB>9</SUB>>];
fixed_44 [label=<(IDENTIFIER,_,Speak(_))<SUB>9</SUB>>];
fixed_45 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>9</SUB>>];
fixed_46 [label=<(Return,Return(true))<SUB>10</SUB>>];
fixed_47 [label=<(LITERAL,true,Return(true))<SUB>10</SUB>>];
fixed_48 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>9</SUB>>];
fixed_49 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>12</SUB>>];
fixed_50 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>12</SUB>>];
fixed_51 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>12</SUB>>];
fixed_52 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>12</SUB>>];
fixed_53 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>12</SUB>>];
fixed_54 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>12</SUB>>];
fixed_55 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>12</SUB>>];
fixed_56 [label=<(IsSpeaking,IsSpeaking())<SUB>12</SUB>>];
fixed_57 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>12</SUB>>];
fixed_58 [label=<(Return,Return(true))<SUB>13</SUB>>];
fixed_59 [label=<(LITERAL,true,Return(true))<SUB>13</SUB>>];
fixed_60 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>12</SUB>>];
fixed_61 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>15</SUB>>];
fixed_62 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>15</SUB>>];
fixed_63 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>15</SUB>>];
fixed_64 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>15</SUB>>];
fixed_65 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>15</SUB>>];
fixed_66 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>15</SUB>>];
fixed_67 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, St...)<SUB>15</SUB>>];
fixed_68 [label=<(StopSpeaking,StopSpeaking())<SUB>15</SUB>>];
fixed_69 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>15</SUB>>];
fixed_70 [label=<(Return,Return(true))<SUB>16</SUB>>];
fixed_71 [label=<(LITERAL,true,Return(true))<SUB>16</SUB>>];
fixed_72 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>15</SUB>>];
fixed_73 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>18</SUB>>];
fixed_74 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>18</SUB>>];
fixed_75 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>18</SUB>>];
fixed_76 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>18</SUB>>];
fixed_77 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>18</SUB>>];
fixed_78 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>18</SUB>>];
fixed_79 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Se...)<SUB>18</SUB>>];
fixed_80 [label=<(SetSpeakProperties,SetSpeakProperties(_))<SUB>18</SUB>>];
fixed_81 [label=<(IDENTIFIER,_,SetSpeakProperties(_))<SUB>18</SUB>>];
fixed_82 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>18</SUB>>];
fixed_83 [label=<(Return,Return(true))<SUB>19</SUB>>];
fixed_84 [label=<(LITERAL,true,Return(true))<SUB>19</SUB>>];
fixed_85 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>18</SUB>>];
fixed_86 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>21</SUB>>];
fixed_87 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>21</SUB>>];
fixed_88 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>21</SUB>>];
fixed_89 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>21</SUB>>];
fixed_90 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>21</SUB>>];
fixed_91 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>21</SUB>>];
fixed_92 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Sp...)<SUB>21</SUB>>];
fixed_93 [label=<(Speak,Speak(_))<SUB>21</SUB>>];
fixed_94 [label=<(IDENTIFIER,_,Speak(_))<SUB>21</SUB>>];
fixed_95 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>21</SUB>>];
fixed_96 [label=<(Return,Return(true))<SUB>22</SUB>>];
fixed_97 [label=<(LITERAL,true,Return(true))<SUB>22</SUB>>];
fixed_98 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>21</SUB>>];
fixed_99 [label=<(RetiresOnSaturation,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_100 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_101 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_102 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_103 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_104 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_105 [label=<(WillOnce,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_106 [label=<(&lt;operator&gt;.fieldAccess,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_107 [label=<(EXPECT_CALL,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_108 [label=<(&lt;operator&gt;.indirection,*mock_speech_synthesis_library_)<SUB>24</SUB>>];
fixed_109 [label=<(IDENTIFIER,mock_speech_synthesis_library_,EXPECT_CALL(*mock_speech_synthesis_library_, Is...)<SUB>24</SUB>>];
fixed_110 [label=<(IsSpeaking,IsSpeaking())<SUB>24</SUB>>];
fixed_111 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>24</SUB>>];
fixed_112 [label=<(Return,Return(true))<SUB>25</SUB>>];
fixed_113 [label=<(LITERAL,true,Return(true))<SUB>25</SUB>>];
fixed_114 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>24</SUB>>];
fixed_115 [label=<(Return,Return(true))<SUB>26</SUB>>];
fixed_116 [label=<(LITERAL,true,Return(true))<SUB>26</SUB>>];
fixed_117 [label=<(FIELD_IDENTIFIER,WillOnce,WillOnce)<SUB>24</SUB>>];
fixed_118 [label=<(Return,Return(false))<SUB>27</SUB>>];
fixed_119 [label=<(LITERAL,false,Return(false))<SUB>27</SUB>>];
fixed_120 [label=<(FIELD_IDENTIFIER,RetiresOnSaturation,RetiresOnSaturation)<SUB>24</SUB>>];
fixed_121 [label=<(METHOD_RETURN,void)<SUB>1</SUB>>];
fixed_123 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_144 [label=<(METHOD,&lt;operator&gt;.fieldAccess)>];
fixed_145 [label=<(PARAM,p1)>];
fixed_146 [label=<(PARAM,p2)>];
fixed_147 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_148 [label=<(METHOD_RETURN,ANY)>];
fixed_174 [label=<(METHOD,Speak)>];
fixed_175 [label=<(PARAM,p1)>];
fixed_176 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_177 [label=<(METHOD_RETURN,ANY)>];
fixed_170 [label=<(METHOD,SetSpeakProperties)>];
fixed_171 [label=<(PARAM,p1)>];
fixed_172 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_173 [label=<(METHOD_RETURN,ANY)>];
fixed_166 [label=<(METHOD,Return)>];
fixed_167 [label=<(PARAM,p1)>];
fixed_168 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_169 [label=<(METHOD_RETURN,ANY)>];
fixed_154 [label=<(METHOD,EXPECT_CALL)>];
fixed_155 [label=<(PARAM,p1)>];
fixed_156 [label=<(PARAM,p2)>];
fixed_157 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_158 [label=<(METHOD_RETURN,ANY)>];
fixed_149 [label=<(METHOD,WillOnce)>];
fixed_150 [label=<(PARAM,p1)>];
fixed_151 [label=<(PARAM,p2)>];
fixed_152 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_153 [label=<(METHOD_RETURN,ANY)>];
fixed_140 [label=<(METHOD,RetiresOnSaturation)>];
fixed_141 [label=<(PARAM,p1)>];
fixed_142 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_143 [label=<(METHOD_RETURN,ANY)>];
fixed_134 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_135 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_136 [label=<(METHOD_RETURN,ANY)>];
fixed_163 [label=<(METHOD,StopSpeaking)>];
fixed_164 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_165 [label=<(METHOD_RETURN,ANY)>];
vulnerable_134 -> vulnerable_135  [key=0, label="AST: "];
vulnerable_134 -> vulnerable_135  [key=1, label="DDG: "];
vulnerable_134 -> vulnerable_136  [key=0, label="AST: "];
vulnerable_134 -> vulnerable_137  [key=0, label="AST: "];
vulnerable_134 -> vulnerable_137  [key=1, label="CFG: "];
vulnerable_135 -> vulnerable_137  [key=0, label="DDG: p1"];
vulnerable_154 -> vulnerable_155  [key=0, label="AST: "];
vulnerable_154 -> vulnerable_155  [key=1, label="DDG: "];
vulnerable_154 -> vulnerable_157  [key=0, label="AST: "];
vulnerable_154 -> vulnerable_156  [key=0, label="AST: "];
vulnerable_154 -> vulnerable_156  [key=1, label="DDG: "];
vulnerable_154 -> vulnerable_158  [key=0, label="AST: "];
vulnerable_154 -> vulnerable_158  [key=1, label="CFG: "];
vulnerable_155 -> vulnerable_158  [key=0, label="DDG: p1"];
vulnerable_156 -> vulnerable_158  [key=0, label="DDG: p2"];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_98  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_98  [key=1, label="CFG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_96  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_16  [key=0, label="CFG: "];
vulnerable_8 -> vulnerable_47  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_38  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_20  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_33  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_58  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_71  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_93  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_15  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_40  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_53  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_30  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_68  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_90  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_87  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_82  [key=0, label="DDG: "];
vulnerable_9 -> vulnerable_10  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_11  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_23  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_36  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_49  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_61  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_74  [key=0, label="AST: "];
vulnerable_11 -> vulnerable_12  [key=0, label="AST: "];
vulnerable_11 -> vulnerable_28  [key=0, label="CFG: "];
vulnerable_11 -> vulnerable_49  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce(Return(true))
       .RetiresOnSaturation"];
vulnerable_12 -> vulnerable_13  [key=0, label="AST: "];
vulnerable_12 -> vulnerable_22  [key=0, label="AST: "];
vulnerable_12 -> vulnerable_11  [key=0, label="CFG: "];
vulnerable_13 -> vulnerable_14  [key=0, label="AST: "];
vulnerable_13 -> vulnerable_20  [key=0, label="AST: "];
vulnerable_13 -> vulnerable_22  [key=0, label="CFG: "];
vulnerable_13 -> vulnerable_51  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce"];
vulnerable_14 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_19  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_20  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_18  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_19  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_27  [key=0, label="DDG: *mock_speech_synthesis_library_"];
vulnerable_16 -> vulnerable_17  [key=0, label="AST: "];
vulnerable_16 -> vulnerable_18  [key=0, label="CFG: "];
vulnerable_18 -> vulnerable_15  [key=0, label="CFG: "];
vulnerable_19 -> vulnerable_14  [key=0, label="CFG: "];
vulnerable_20 -> vulnerable_21  [key=0, label="AST: "];
vulnerable_20 -> vulnerable_13  [key=0, label="CFG: "];
vulnerable_20 -> vulnerable_13  [key=1, label="DDG: true"];
vulnerable_22 -> vulnerable_12  [key=0, label="CFG: "];
vulnerable_23 -> vulnerable_24  [key=0, label="AST: "];
vulnerable_23 -> vulnerable_41  [key=0, label="CFG: "];
vulnerable_24 -> vulnerable_25  [key=0, label="AST: "];
vulnerable_24 -> vulnerable_35  [key=0, label="AST: "];
vulnerable_24 -> vulnerable_23  [key=0, label="CFG: "];
vulnerable_25 -> vulnerable_26  [key=0, label="AST: "];
vulnerable_25 -> vulnerable_33  [key=0, label="AST: "];
vulnerable_25 -> vulnerable_35  [key=0, label="CFG: "];
vulnerable_26 -> vulnerable_27  [key=0, label="AST: "];
vulnerable_26 -> vulnerable_32  [key=0, label="AST: "];
vulnerable_26 -> vulnerable_33  [key=0, label="CFG: "];
vulnerable_27 -> vulnerable_28  [key=0, label="AST: "];
vulnerable_27 -> vulnerable_30  [key=0, label="AST: "];
vulnerable_27 -> vulnerable_32  [key=0, label="CFG: "];
vulnerable_27 -> vulnerable_40  [key=0, label="DDG: *mock_speech_synthesis_library_"];
vulnerable_28 -> vulnerable_29  [key=0, label="AST: "];
vulnerable_28 -> vulnerable_30  [key=0, label="CFG: "];
vulnerable_30 -> vulnerable_31  [key=0, label="AST: "];
vulnerable_30 -> vulnerable_27  [key=0, label="CFG: "];
vulnerable_30 -> vulnerable_27  [key=1, label="DDG: _"];
vulnerable_30 -> vulnerable_68  [key=0, label="DDG: _"];
vulnerable_32 -> vulnerable_26  [key=0, label="CFG: "];
vulnerable_33 -> vulnerable_34  [key=0, label="AST: "];
vulnerable_33 -> vulnerable_25  [key=0, label="CFG: "];
vulnerable_33 -> vulnerable_25  [key=1, label="DDG: true"];
vulnerable_35 -> vulnerable_24  [key=0, label="CFG: "];
vulnerable_36 -> vulnerable_37  [key=0, label="AST: "];
vulnerable_36 -> vulnerable_47  [key=0, label="AST: "];
vulnerable_36 -> vulnerable_54  [key=0, label="CFG: "];
vulnerable_36 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .Times(AnyNumber())
      .WillRepeatedly"];
vulnerable_36 -> vulnerable_96  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .Times(AnyNumber())
      .WillRepeatedly(Return(true))"];
vulnerable_37 -> vulnerable_38  [key=0, label="AST: "];
vulnerable_37 -> vulnerable_46  [key=0, label="AST: "];
vulnerable_37 -> vulnerable_47  [key=0, label="CFG: "];
vulnerable_38 -> vulnerable_39  [key=0, label="AST: "];
vulnerable_38 -> vulnerable_45  [key=0, label="AST: "];
vulnerable_38 -> vulnerable_46  [key=0, label="CFG: "];
vulnerable_38 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .Times"];
vulnerable_38 -> vulnerable_96  [key=1, label="DDG: AnyNumber()"];
vulnerable_39 -> vulnerable_40  [key=0, label="AST: "];
vulnerable_39 -> vulnerable_44  [key=0, label="AST: "];
vulnerable_39 -> vulnerable_45  [key=0, label="CFG: "];
vulnerable_40 -> vulnerable_41  [key=0, label="AST: "];
vulnerable_40 -> vulnerable_43  [key=0, label="AST: "];
vulnerable_40 -> vulnerable_44  [key=0, label="CFG: "];
vulnerable_40 -> vulnerable_53  [key=0, label="DDG: *mock_speech_synthesis_library_"];
vulnerable_41 -> vulnerable_42  [key=0, label="AST: "];
vulnerable_41 -> vulnerable_43  [key=0, label="CFG: "];
vulnerable_43 -> vulnerable_40  [key=0, label="CFG: "];
vulnerable_44 -> vulnerable_39  [key=0, label="CFG: "];
vulnerable_45 -> vulnerable_38  [key=0, label="CFG: "];
vulnerable_46 -> vulnerable_37  [key=0, label="CFG: "];
vulnerable_47 -> vulnerable_48  [key=0, label="AST: "];
vulnerable_47 -> vulnerable_36  [key=0, label="CFG: "];
vulnerable_47 -> vulnerable_36  [key=1, label="DDG: true"];
vulnerable_49 -> vulnerable_50  [key=0, label="AST: "];
vulnerable_49 -> vulnerable_66  [key=0, label="CFG: "];
vulnerable_49 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce(Return(true))
       .RetiresOnSaturation"];
vulnerable_49 -> vulnerable_96  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce(Return(true))
       .RetiresOnSaturation()"];
vulnerable_50 -> vulnerable_51  [key=0, label="AST: "];
vulnerable_50 -> vulnerable_60  [key=0, label="AST: "];
vulnerable_50 -> vulnerable_49  [key=0, label="CFG: "];
vulnerable_51 -> vulnerable_52  [key=0, label="AST: "];
vulnerable_51 -> vulnerable_58  [key=0, label="AST: "];
vulnerable_51 -> vulnerable_60  [key=0, label="CFG: "];
vulnerable_51 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce"];
vulnerable_52 -> vulnerable_53  [key=0, label="AST: "];
vulnerable_52 -> vulnerable_57  [key=0, label="AST: "];
vulnerable_52 -> vulnerable_58  [key=0, label="CFG: "];
vulnerable_53 -> vulnerable_54  [key=0, label="AST: "];
vulnerable_53 -> vulnerable_56  [key=0, label="AST: "];
vulnerable_53 -> vulnerable_57  [key=0, label="CFG: "];
vulnerable_53 -> vulnerable_96  [key=0, label="DDG: StopSpeaking()"];
vulnerable_53 -> vulnerable_65  [key=0, label="DDG: *mock_speech_synthesis_library_"];
vulnerable_54 -> vulnerable_55  [key=0, label="AST: "];
vulnerable_54 -> vulnerable_56  [key=0, label="CFG: "];
vulnerable_56 -> vulnerable_53  [key=0, label="CFG: "];
vulnerable_57 -> vulnerable_52  [key=0, label="CFG: "];
vulnerable_58 -> vulnerable_59  [key=0, label="AST: "];
vulnerable_58 -> vulnerable_51  [key=0, label="CFG: "];
vulnerable_58 -> vulnerable_51  [key=1, label="DDG: true"];
vulnerable_60 -> vulnerable_50  [key=0, label="CFG: "];
vulnerable_61 -> vulnerable_62  [key=0, label="AST: "];
vulnerable_61 -> vulnerable_83  [key=0, label="CFG: "];
vulnerable_61 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))
       .WillOnce(Return(true))
       .RetiresOnSaturation"];
vulnerable_61 -> vulnerable_96  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))
       .WillOnce(Return(true))
       .RetiresOnSaturation()"];
vulnerable_62 -> vulnerable_63  [key=0, label="AST: "];
vulnerable_62 -> vulnerable_73  [key=0, label="AST: "];
vulnerable_62 -> vulnerable_61  [key=0, label="CFG: "];
vulnerable_63 -> vulnerable_64  [key=0, label="AST: "];
vulnerable_63 -> vulnerable_71  [key=0, label="AST: "];
vulnerable_63 -> vulnerable_73  [key=0, label="CFG: "];
vulnerable_63 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))
       .WillOnce"];
vulnerable_64 -> vulnerable_65  [key=0, label="AST: "];
vulnerable_64 -> vulnerable_70  [key=0, label="AST: "];
vulnerable_64 -> vulnerable_71  [key=0, label="CFG: "];
vulnerable_65 -> vulnerable_66  [key=0, label="AST: "];
vulnerable_65 -> vulnerable_68  [key=0, label="AST: "];
vulnerable_65 -> vulnerable_70  [key=0, label="CFG: "];
vulnerable_65 -> vulnerable_96  [key=0, label="DDG: Speak(_)"];
vulnerable_65 -> vulnerable_82  [key=0, label="DDG: *mock_speech_synthesis_library_"];
vulnerable_66 -> vulnerable_67  [key=0, label="AST: "];
vulnerable_66 -> vulnerable_68  [key=0, label="CFG: "];
vulnerable_68 -> vulnerable_69  [key=0, label="AST: "];
vulnerable_68 -> vulnerable_65  [key=0, label="CFG: "];
vulnerable_68 -> vulnerable_65  [key=1, label="DDG: _"];
vulnerable_68 -> vulnerable_96  [key=0, label="DDG: _"];
vulnerable_70 -> vulnerable_64  [key=0, label="CFG: "];
vulnerable_71 -> vulnerable_72  [key=0, label="AST: "];
vulnerable_71 -> vulnerable_63  [key=0, label="CFG: "];
vulnerable_71 -> vulnerable_63  [key=1, label="DDG: true"];
vulnerable_73 -> vulnerable_62  [key=0, label="CFG: "];
vulnerable_74 -> vulnerable_75  [key=0, label="AST: "];
vulnerable_74 -> vulnerable_96  [key=0, label="CFG: "];
vulnerable_74 -> vulnerable_96  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce(Return(true))
      .WillOnce(Return(false))
      .RetiresOnSaturation"];
vulnerable_74 -> vulnerable_96  [key=2, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce(Return(true))
      .WillOnce(Return(false))
      .RetiresOnSaturation()"];
vulnerable_75 -> vulnerable_76  [key=0, label="AST: "];
vulnerable_75 -> vulnerable_95  [key=0, label="AST: "];
vulnerable_75 -> vulnerable_74  [key=0, label="CFG: "];
vulnerable_76 -> vulnerable_77  [key=0, label="AST: "];
vulnerable_76 -> vulnerable_93  [key=0, label="AST: "];
vulnerable_76 -> vulnerable_95  [key=0, label="CFG: "];
vulnerable_76 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce(Return(true))
      .WillOnce"];
vulnerable_76 -> vulnerable_96  [key=1, label="DDG: Return(false)"];
vulnerable_77 -> vulnerable_78  [key=0, label="AST: "];
vulnerable_77 -> vulnerable_92  [key=0, label="AST: "];
vulnerable_77 -> vulnerable_93  [key=0, label="CFG: "];
vulnerable_78 -> vulnerable_79  [key=0, label="AST: "];
vulnerable_78 -> vulnerable_90  [key=0, label="AST: "];
vulnerable_78 -> vulnerable_92  [key=0, label="CFG: "];
vulnerable_78 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce"];
vulnerable_78 -> vulnerable_96  [key=1, label="DDG: Return(true)"];
vulnerable_79 -> vulnerable_80  [key=0, label="AST: "];
vulnerable_79 -> vulnerable_89  [key=0, label="AST: "];
vulnerable_79 -> vulnerable_90  [key=0, label="CFG: "];
vulnerable_80 -> vulnerable_81  [key=0, label="AST: "];
vulnerable_80 -> vulnerable_87  [key=0, label="AST: "];
vulnerable_80 -> vulnerable_89  [key=0, label="CFG: "];
vulnerable_80 -> vulnerable_96  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce"];
vulnerable_81 -> vulnerable_82  [key=0, label="AST: "];
vulnerable_81 -> vulnerable_86  [key=0, label="AST: "];
vulnerable_81 -> vulnerable_87  [key=0, label="CFG: "];
vulnerable_82 -> vulnerable_83  [key=0, label="AST: "];
vulnerable_82 -> vulnerable_85  [key=0, label="AST: "];
vulnerable_82 -> vulnerable_86  [key=0, label="CFG: "];
vulnerable_82 -> vulnerable_96  [key=0, label="DDG: *mock_speech_synthesis_library_"];
vulnerable_82 -> vulnerable_96  [key=1, label="DDG: IsSpeaking()"];
vulnerable_83 -> vulnerable_84  [key=0, label="AST: "];
vulnerable_83 -> vulnerable_85  [key=0, label="CFG: "];
vulnerable_85 -> vulnerable_82  [key=0, label="CFG: "];
vulnerable_86 -> vulnerable_81  [key=0, label="CFG: "];
vulnerable_87 -> vulnerable_88  [key=0, label="AST: "];
vulnerable_87 -> vulnerable_80  [key=0, label="CFG: "];
vulnerable_87 -> vulnerable_80  [key=1, label="DDG: true"];
vulnerable_89 -> vulnerable_79  [key=0, label="CFG: "];
vulnerable_90 -> vulnerable_91  [key=0, label="AST: "];
vulnerable_90 -> vulnerable_78  [key=0, label="CFG: "];
vulnerable_90 -> vulnerable_78  [key=1, label="DDG: true"];
vulnerable_92 -> vulnerable_77  [key=0, label="CFG: "];
vulnerable_93 -> vulnerable_94  [key=0, label="AST: "];
vulnerable_93 -> vulnerable_76  [key=0, label="CFG: "];
vulnerable_93 -> vulnerable_76  [key=1, label="DDG: false"];
vulnerable_95 -> vulnerable_75  [key=0, label="CFG: "];
vulnerable_159 -> vulnerable_160  [key=0, label="AST: "];
vulnerable_159 -> vulnerable_161  [key=0, label="AST: "];
vulnerable_159 -> vulnerable_161  [key=1, label="CFG: "];
vulnerable_119 -> vulnerable_120  [key=0, label="AST: "];
vulnerable_119 -> vulnerable_120  [key=1, label="DDG: "];
vulnerable_119 -> vulnerable_122  [key=0, label="AST: "];
vulnerable_119 -> vulnerable_121  [key=0, label="AST: "];
vulnerable_119 -> vulnerable_121  [key=1, label="DDG: "];
vulnerable_119 -> vulnerable_123  [key=0, label="AST: "];
vulnerable_119 -> vulnerable_123  [key=1, label="CFG: "];
vulnerable_120 -> vulnerable_123  [key=0, label="DDG: p1"];
vulnerable_121 -> vulnerable_123  [key=0, label="DDG: p2"];
vulnerable_149 -> vulnerable_150  [key=0, label="AST: "];
vulnerable_149 -> vulnerable_150  [key=1, label="DDG: "];
vulnerable_149 -> vulnerable_152  [key=0, label="AST: "];
vulnerable_149 -> vulnerable_151  [key=0, label="AST: "];
vulnerable_149 -> vulnerable_151  [key=1, label="DDG: "];
vulnerable_149 -> vulnerable_153  [key=0, label="AST: "];
vulnerable_149 -> vulnerable_153  [key=1, label="CFG: "];
vulnerable_150 -> vulnerable_153  [key=0, label="DDG: p1"];
vulnerable_151 -> vulnerable_153  [key=0, label="DDG: p2"];
vulnerable_145 -> vulnerable_146  [key=0, label="AST: "];
vulnerable_145 -> vulnerable_146  [key=1, label="DDG: "];
vulnerable_145 -> vulnerable_147  [key=0, label="AST: "];
vulnerable_145 -> vulnerable_148  [key=0, label="AST: "];
vulnerable_145 -> vulnerable_148  [key=1, label="CFG: "];
vulnerable_146 -> vulnerable_148  [key=0, label="DDG: p1"];
vulnerable_141 -> vulnerable_142  [key=0, label="AST: "];
vulnerable_141 -> vulnerable_142  [key=1, label="DDG: "];
vulnerable_141 -> vulnerable_143  [key=0, label="AST: "];
vulnerable_141 -> vulnerable_144  [key=0, label="AST: "];
vulnerable_141 -> vulnerable_144  [key=1, label="CFG: "];
vulnerable_142 -> vulnerable_144  [key=0, label="DDG: p1"];
vulnerable_129 -> vulnerable_130  [key=0, label="AST: "];
vulnerable_129 -> vulnerable_130  [key=1, label="DDG: "];
vulnerable_129 -> vulnerable_132  [key=0, label="AST: "];
vulnerable_129 -> vulnerable_131  [key=0, label="AST: "];
vulnerable_129 -> vulnerable_131  [key=1, label="DDG: "];
vulnerable_129 -> vulnerable_133  [key=0, label="AST: "];
vulnerable_129 -> vulnerable_133  [key=1, label="CFG: "];
vulnerable_130 -> vulnerable_133  [key=0, label="DDG: p1"];
vulnerable_131 -> vulnerable_133  [key=0, label="DDG: p2"];
vulnerable_124 -> vulnerable_125  [key=0, label="AST: "];
vulnerable_124 -> vulnerable_125  [key=1, label="DDG: "];
vulnerable_124 -> vulnerable_127  [key=0, label="AST: "];
vulnerable_124 -> vulnerable_126  [key=0, label="AST: "];
vulnerable_124 -> vulnerable_126  [key=1, label="DDG: "];
vulnerable_124 -> vulnerable_128  [key=0, label="AST: "];
vulnerable_124 -> vulnerable_128  [key=1, label="CFG: "];
vulnerable_125 -> vulnerable_128  [key=0, label="DDG: p1"];
vulnerable_126 -> vulnerable_128  [key=0, label="DDG: p2"];
vulnerable_115 -> vulnerable_116  [key=0, label="AST: "];
vulnerable_115 -> vulnerable_116  [key=1, label="DDG: "];
vulnerable_115 -> vulnerable_117  [key=0, label="AST: "];
vulnerable_115 -> vulnerable_118  [key=0, label="AST: "];
vulnerable_115 -> vulnerable_118  [key=1, label="CFG: "];
vulnerable_116 -> vulnerable_118  [key=0, label="DDG: p1"];
vulnerable_109 -> vulnerable_110  [key=0, label="AST: "];
vulnerable_109 -> vulnerable_111  [key=0, label="AST: "];
vulnerable_109 -> vulnerable_111  [key=1, label="CFG: "];
vulnerable_138 -> vulnerable_139  [key=0, label="AST: "];
vulnerable_138 -> vulnerable_140  [key=0, label="AST: "];
vulnerable_138 -> vulnerable_140  [key=1, label="CFG: "];
vulnerable_162 -> vulnerable_163  [key=0, label="AST: "];
vulnerable_162 -> vulnerable_164  [key=0, label="AST: "];
vulnerable_162 -> vulnerable_164  [key=1, label="CFG: "];
fixed_159 -> fixed_160  [key=0, label="AST: "];
fixed_159 -> fixed_160  [key=1, label="DDG: "];
fixed_159 -> fixed_161  [key=0, label="AST: "];
fixed_159 -> fixed_162  [key=0, label="AST: "];
fixed_159 -> fixed_162  [key=1, label="CFG: "];
fixed_160 -> fixed_162  [key=0, label="DDG: p1"];
fixed_161 -> vulnerable_134  [key=0];
fixed_162 -> vulnerable_134  [key=0];
fixed_178 -> fixed_179  [key=0, label="AST: "];
fixed_178 -> fixed_180  [key=0, label="AST: "];
fixed_178 -> fixed_180  [key=1, label="CFG: "];
fixed_179 -> vulnerable_134  [key=0];
fixed_180 -> vulnerable_134  [key=0];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_123  [key=0, label="AST: "];
fixed_6 -> fixed_123  [key=1, label="CFG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_8 -> fixed_9  [key=0, label="AST: "];
fixed_8 -> fixed_121  [key=0, label="AST: "];
fixed_8 -> fixed_16  [key=0, label="CFG: "];
fixed_8 -> fixed_20  [key=0, label="DDG: "];
fixed_8 -> fixed_33  [key=0, label="DDG: "];
fixed_8 -> fixed_46  [key=0, label="DDG: "];
fixed_8 -> fixed_58  [key=0, label="DDG: "];
fixed_8 -> fixed_70  [key=0, label="DDG: "];
fixed_8 -> fixed_83  [key=0, label="DDG: "];
fixed_8 -> fixed_96  [key=0, label="DDG: "];
fixed_8 -> fixed_118  [key=0, label="DDG: "];
fixed_8 -> fixed_15  [key=0, label="DDG: "];
fixed_8 -> fixed_53  [key=0, label="DDG: "];
fixed_8 -> fixed_65  [key=0, label="DDG: "];
fixed_8 -> fixed_30  [key=0, label="DDG: "];
fixed_8 -> fixed_43  [key=0, label="DDG: "];
fixed_8 -> fixed_80  [key=0, label="DDG: "];
fixed_8 -> fixed_93  [key=0, label="DDG: "];
fixed_8 -> fixed_115  [key=0, label="DDG: "];
fixed_8 -> fixed_112  [key=0, label="DDG: "];
fixed_8 -> fixed_107  [key=0, label="DDG: "];
fixed_9 -> fixed_10  [key=0, label="AST: "];
fixed_9 -> fixed_11  [key=0, label="AST: "];
fixed_9 -> fixed_23  [key=0, label="AST: "];
fixed_9 -> fixed_36  [key=0, label="AST: "];
fixed_9 -> fixed_49  [key=0, label="AST: "];
fixed_9 -> fixed_61  [key=0, label="AST: "];
fixed_9 -> fixed_73  [key=0, label="AST: "];
fixed_9 -> fixed_86  [key=0, label="AST: "];
fixed_9 -> fixed_99  [key=0, label="AST: "];
fixed_10 -> vulnerable_134  [key=0];
fixed_11 -> fixed_12  [key=0, label="AST: "];
fixed_11 -> fixed_28  [key=0, label="CFG: "];
fixed_11 -> fixed_61  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce(Return(true))
       .RetiresOnSaturation"];
fixed_12 -> fixed_13  [key=0, label="AST: "];
fixed_12 -> fixed_22  [key=0, label="AST: "];
fixed_12 -> fixed_11  [key=0, label="CFG: "];
fixed_13 -> fixed_14  [key=0, label="AST: "];
fixed_13 -> fixed_20  [key=0, label="AST: "];
fixed_13 -> fixed_22  [key=0, label="CFG: "];
fixed_13 -> fixed_63  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce"];
fixed_14 -> fixed_15  [key=0, label="AST: "];
fixed_14 -> fixed_19  [key=0, label="AST: "];
fixed_14 -> fixed_20  [key=0, label="CFG: "];
fixed_15 -> fixed_16  [key=0, label="AST: "];
fixed_15 -> fixed_18  [key=0, label="AST: "];
fixed_15 -> fixed_19  [key=0, label="CFG: "];
fixed_15 -> fixed_27  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_16 -> fixed_17  [key=0, label="AST: "];
fixed_16 -> fixed_18  [key=0, label="CFG: "];
fixed_17 -> vulnerable_134  [key=0];
fixed_18 -> fixed_15  [key=0, label="CFG: "];
fixed_19 -> fixed_14  [key=0, label="CFG: "];
fixed_20 -> fixed_21  [key=0, label="AST: "];
fixed_20 -> fixed_13  [key=0, label="CFG: "];
fixed_20 -> fixed_13  [key=1, label="DDG: true"];
fixed_21 -> vulnerable_134  [key=0];
fixed_22 -> fixed_12  [key=0, label="CFG: "];
fixed_23 -> fixed_24  [key=0, label="AST: "];
fixed_23 -> fixed_41  [key=0, label="CFG: "];
fixed_24 -> fixed_25  [key=0, label="AST: "];
fixed_24 -> fixed_35  [key=0, label="AST: "];
fixed_24 -> fixed_23  [key=0, label="CFG: "];
fixed_25 -> fixed_26  [key=0, label="AST: "];
fixed_25 -> fixed_33  [key=0, label="AST: "];
fixed_25 -> fixed_35  [key=0, label="CFG: "];
fixed_26 -> fixed_27  [key=0, label="AST: "];
fixed_26 -> fixed_32  [key=0, label="AST: "];
fixed_26 -> fixed_33  [key=0, label="CFG: "];
fixed_27 -> fixed_28  [key=0, label="AST: "];
fixed_27 -> fixed_30  [key=0, label="AST: "];
fixed_27 -> fixed_32  [key=0, label="CFG: "];
fixed_27 -> fixed_40  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_28 -> fixed_29  [key=0, label="AST: "];
fixed_28 -> fixed_30  [key=0, label="CFG: "];
fixed_29 -> vulnerable_134  [key=0];
fixed_30 -> fixed_31  [key=0, label="AST: "];
fixed_30 -> fixed_27  [key=0, label="CFG: "];
fixed_30 -> fixed_27  [key=1, label="DDG: _"];
fixed_30 -> fixed_43  [key=0, label="DDG: _"];
fixed_31 -> vulnerable_134  [key=0];
fixed_32 -> fixed_26  [key=0, label="CFG: "];
fixed_33 -> fixed_34  [key=0, label="AST: "];
fixed_33 -> fixed_25  [key=0, label="CFG: "];
fixed_33 -> fixed_25  [key=1, label="DDG: true"];
fixed_34 -> vulnerable_134  [key=0];
fixed_35 -> fixed_24  [key=0, label="CFG: "];
fixed_36 -> fixed_37  [key=0, label="AST: "];
fixed_36 -> fixed_54  [key=0, label="CFG: "];
fixed_37 -> fixed_38  [key=0, label="AST: "];
fixed_37 -> fixed_48  [key=0, label="AST: "];
fixed_37 -> fixed_36  [key=0, label="CFG: "];
fixed_38 -> fixed_39  [key=0, label="AST: "];
fixed_38 -> fixed_46  [key=0, label="AST: "];
fixed_38 -> fixed_48  [key=0, label="CFG: "];
fixed_39 -> fixed_40  [key=0, label="AST: "];
fixed_39 -> fixed_45  [key=0, label="AST: "];
fixed_39 -> fixed_46  [key=0, label="CFG: "];
fixed_40 -> fixed_41  [key=0, label="AST: "];
fixed_40 -> fixed_43  [key=0, label="AST: "];
fixed_40 -> fixed_45  [key=0, label="CFG: "];
fixed_40 -> fixed_53  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_41 -> fixed_42  [key=0, label="AST: "];
fixed_41 -> fixed_43  [key=0, label="CFG: "];
fixed_42 -> vulnerable_134  [key=0];
fixed_43 -> fixed_44  [key=0, label="AST: "];
fixed_43 -> fixed_40  [key=0, label="CFG: "];
fixed_43 -> fixed_40  [key=1, label="DDG: _"];
fixed_43 -> fixed_80  [key=0, label="DDG: _"];
fixed_44 -> vulnerable_134  [key=0];
fixed_45 -> fixed_39  [key=0, label="CFG: "];
fixed_46 -> fixed_47  [key=0, label="AST: "];
fixed_46 -> fixed_38  [key=0, label="CFG: "];
fixed_46 -> fixed_38  [key=1, label="DDG: true"];
fixed_47 -> vulnerable_134  [key=0];
fixed_48 -> fixed_37  [key=0, label="CFG: "];
fixed_49 -> fixed_50  [key=0, label="AST: "];
fixed_49 -> fixed_66  [key=0, label="CFG: "];
fixed_49 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .RetiresOnSaturation"];
fixed_49 -> fixed_121  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .RetiresOnSaturation()"];
fixed_50 -> fixed_51  [key=0, label="AST: "];
fixed_50 -> fixed_60  [key=0, label="AST: "];
fixed_50 -> fixed_49  [key=0, label="CFG: "];
fixed_51 -> fixed_52  [key=0, label="AST: "];
fixed_51 -> fixed_58  [key=0, label="AST: "];
fixed_51 -> fixed_60  [key=0, label="CFG: "];
fixed_51 -> fixed_105  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce"];
fixed_52 -> fixed_53  [key=0, label="AST: "];
fixed_52 -> fixed_57  [key=0, label="AST: "];
fixed_52 -> fixed_58  [key=0, label="CFG: "];
fixed_53 -> fixed_54  [key=0, label="AST: "];
fixed_53 -> fixed_56  [key=0, label="AST: "];
fixed_53 -> fixed_57  [key=0, label="CFG: "];
fixed_53 -> fixed_65  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_54 -> fixed_55  [key=0, label="AST: "];
fixed_54 -> fixed_56  [key=0, label="CFG: "];
fixed_55 -> vulnerable_134  [key=0];
fixed_56 -> fixed_53  [key=0, label="CFG: "];
fixed_57 -> fixed_52  [key=0, label="CFG: "];
fixed_58 -> fixed_59  [key=0, label="AST: "];
fixed_58 -> fixed_51  [key=0, label="CFG: "];
fixed_58 -> fixed_51  [key=1, label="DDG: true"];
fixed_59 -> vulnerable_134  [key=0];
fixed_60 -> fixed_50  [key=0, label="CFG: "];
fixed_61 -> fixed_62  [key=0, label="AST: "];
fixed_61 -> fixed_78  [key=0, label="CFG: "];
fixed_61 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce(Return(true))
       .RetiresOnSaturation"];
fixed_61 -> fixed_121  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce(Return(true))
       .RetiresOnSaturation()"];
fixed_62 -> fixed_63  [key=0, label="AST: "];
fixed_62 -> fixed_72  [key=0, label="AST: "];
fixed_62 -> fixed_61  [key=0, label="CFG: "];
fixed_63 -> fixed_64  [key=0, label="AST: "];
fixed_63 -> fixed_70  [key=0, label="AST: "];
fixed_63 -> fixed_72  [key=0, label="CFG: "];
fixed_63 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())
       .WillOnce"];
fixed_64 -> fixed_65  [key=0, label="AST: "];
fixed_64 -> fixed_69  [key=0, label="AST: "];
fixed_64 -> fixed_70  [key=0, label="CFG: "];
fixed_65 -> fixed_66  [key=0, label="AST: "];
fixed_65 -> fixed_68  [key=0, label="AST: "];
fixed_65 -> fixed_69  [key=0, label="CFG: "];
fixed_65 -> fixed_121  [key=0, label="DDG: StopSpeaking()"];
fixed_65 -> fixed_77  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_66 -> fixed_67  [key=0, label="AST: "];
fixed_66 -> fixed_68  [key=0, label="CFG: "];
fixed_67 -> vulnerable_134  [key=0];
fixed_68 -> fixed_65  [key=0, label="CFG: "];
fixed_69 -> fixed_64  [key=0, label="CFG: "];
fixed_70 -> fixed_71  [key=0, label="AST: "];
fixed_70 -> fixed_63  [key=0, label="CFG: "];
fixed_70 -> fixed_63  [key=1, label="DDG: true"];
fixed_71 -> vulnerable_134  [key=0];
fixed_72 -> fixed_62  [key=0, label="CFG: "];
fixed_73 -> fixed_74  [key=0, label="AST: "];
fixed_73 -> fixed_91  [key=0, label="CFG: "];
fixed_73 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, SetSpeakProperties(_))
      .WillOnce(Return(true))
      .RetiresOnSaturation()"];
fixed_74 -> fixed_75  [key=0, label="AST: "];
fixed_74 -> fixed_85  [key=0, label="AST: "];
fixed_74 -> fixed_73  [key=0, label="CFG: "];
fixed_75 -> fixed_76  [key=0, label="AST: "];
fixed_75 -> fixed_83  [key=0, label="AST: "];
fixed_75 -> fixed_85  [key=0, label="CFG: "];
fixed_76 -> fixed_77  [key=0, label="AST: "];
fixed_76 -> fixed_82  [key=0, label="AST: "];
fixed_76 -> fixed_83  [key=0, label="CFG: "];
fixed_77 -> fixed_78  [key=0, label="AST: "];
fixed_77 -> fixed_80  [key=0, label="AST: "];
fixed_77 -> fixed_82  [key=0, label="CFG: "];
fixed_77 -> fixed_121  [key=0, label="DDG: SetSpeakProperties(_)"];
fixed_77 -> fixed_90  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_78 -> fixed_79  [key=0, label="AST: "];
fixed_78 -> fixed_80  [key=0, label="CFG: "];
fixed_79 -> vulnerable_134  [key=0];
fixed_80 -> fixed_81  [key=0, label="AST: "];
fixed_80 -> fixed_77  [key=0, label="CFG: "];
fixed_80 -> fixed_77  [key=1, label="DDG: _"];
fixed_80 -> fixed_93  [key=0, label="DDG: _"];
fixed_81 -> vulnerable_134  [key=0];
fixed_82 -> fixed_76  [key=0, label="CFG: "];
fixed_83 -> fixed_84  [key=0, label="AST: "];
fixed_83 -> fixed_75  [key=0, label="CFG: "];
fixed_83 -> fixed_75  [key=1, label="DDG: true"];
fixed_84 -> vulnerable_134  [key=0];
fixed_85 -> fixed_74  [key=0, label="CFG: "];
fixed_86 -> fixed_87  [key=0, label="AST: "];
fixed_86 -> fixed_108  [key=0, label="CFG: "];
fixed_86 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))
       .WillOnce(Return(true))
       .RetiresOnSaturation"];
fixed_86 -> fixed_121  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))
       .WillOnce(Return(true))
       .RetiresOnSaturation()"];
fixed_87 -> fixed_88  [key=0, label="AST: "];
fixed_87 -> fixed_98  [key=0, label="AST: "];
fixed_87 -> fixed_86  [key=0, label="CFG: "];
fixed_88 -> fixed_89  [key=0, label="AST: "];
fixed_88 -> fixed_96  [key=0, label="AST: "];
fixed_88 -> fixed_98  [key=0, label="CFG: "];
fixed_88 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))
       .WillOnce"];
fixed_89 -> fixed_90  [key=0, label="AST: "];
fixed_89 -> fixed_95  [key=0, label="AST: "];
fixed_89 -> fixed_96  [key=0, label="CFG: "];
fixed_90 -> fixed_91  [key=0, label="AST: "];
fixed_90 -> fixed_93  [key=0, label="AST: "];
fixed_90 -> fixed_95  [key=0, label="CFG: "];
fixed_90 -> fixed_121  [key=0, label="DDG: Speak(_)"];
fixed_90 -> fixed_107  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_91 -> fixed_92  [key=0, label="AST: "];
fixed_91 -> fixed_93  [key=0, label="CFG: "];
fixed_92 -> vulnerable_134  [key=0];
fixed_93 -> fixed_94  [key=0, label="AST: "];
fixed_93 -> fixed_90  [key=0, label="CFG: "];
fixed_93 -> fixed_90  [key=1, label="DDG: _"];
fixed_93 -> fixed_121  [key=0, label="DDG: _"];
fixed_94 -> vulnerable_134  [key=0];
fixed_95 -> fixed_89  [key=0, label="CFG: "];
fixed_96 -> fixed_97  [key=0, label="AST: "];
fixed_96 -> fixed_88  [key=0, label="CFG: "];
fixed_96 -> fixed_88  [key=1, label="DDG: true"];
fixed_97 -> vulnerable_134  [key=0];
fixed_98 -> fixed_87  [key=0, label="CFG: "];
fixed_99 -> fixed_100  [key=0, label="AST: "];
fixed_99 -> fixed_121  [key=0, label="CFG: "];
fixed_99 -> fixed_121  [key=1, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce(Return(true))
      .WillOnce(Return(false))
      .RetiresOnSaturation"];
fixed_99 -> fixed_121  [key=2, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce(Return(true))
      .WillOnce(Return(false))
      .RetiresOnSaturation()"];
fixed_100 -> fixed_101  [key=0, label="AST: "];
fixed_100 -> fixed_120  [key=0, label="AST: "];
fixed_100 -> fixed_99  [key=0, label="CFG: "];
fixed_101 -> fixed_102  [key=0, label="AST: "];
fixed_101 -> fixed_118  [key=0, label="AST: "];
fixed_101 -> fixed_120  [key=0, label="CFG: "];
fixed_101 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce(Return(true))
      .WillOnce"];
fixed_101 -> fixed_121  [key=1, label="DDG: Return(false)"];
fixed_102 -> fixed_103  [key=0, label="AST: "];
fixed_102 -> fixed_117  [key=0, label="AST: "];
fixed_102 -> fixed_118  [key=0, label="CFG: "];
fixed_103 -> fixed_104  [key=0, label="AST: "];
fixed_103 -> fixed_115  [key=0, label="AST: "];
fixed_103 -> fixed_117  [key=0, label="CFG: "];
fixed_103 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce(Return(true))
      .WillOnce"];
fixed_103 -> fixed_121  [key=1, label="DDG: Return(true)"];
fixed_104 -> fixed_105  [key=0, label="AST: "];
fixed_104 -> fixed_114  [key=0, label="AST: "];
fixed_104 -> fixed_115  [key=0, label="CFG: "];
fixed_105 -> fixed_106  [key=0, label="AST: "];
fixed_105 -> fixed_112  [key=0, label="AST: "];
fixed_105 -> fixed_114  [key=0, label="CFG: "];
fixed_105 -> fixed_121  [key=0, label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())
      .WillOnce"];
fixed_106 -> fixed_107  [key=0, label="AST: "];
fixed_106 -> fixed_111  [key=0, label="AST: "];
fixed_106 -> fixed_112  [key=0, label="CFG: "];
fixed_107 -> fixed_108  [key=0, label="AST: "];
fixed_107 -> fixed_110  [key=0, label="AST: "];
fixed_107 -> fixed_111  [key=0, label="CFG: "];
fixed_107 -> fixed_121  [key=0, label="DDG: *mock_speech_synthesis_library_"];
fixed_107 -> fixed_121  [key=1, label="DDG: IsSpeaking()"];
fixed_108 -> fixed_109  [key=0, label="AST: "];
fixed_108 -> fixed_110  [key=0, label="CFG: "];
fixed_109 -> vulnerable_134  [key=0];
fixed_110 -> fixed_107  [key=0, label="CFG: "];
fixed_111 -> fixed_106  [key=0, label="CFG: "];
fixed_112 -> fixed_113  [key=0, label="AST: "];
fixed_112 -> fixed_105  [key=0, label="CFG: "];
fixed_112 -> fixed_105  [key=1, label="DDG: true"];
fixed_113 -> vulnerable_134  [key=0];
fixed_114 -> fixed_104  [key=0, label="CFG: "];
fixed_115 -> fixed_116  [key=0, label="AST: "];
fixed_115 -> fixed_103  [key=0, label="CFG: "];
fixed_115 -> fixed_103  [key=1, label="DDG: true"];
fixed_116 -> vulnerable_134  [key=0];
fixed_117 -> fixed_102  [key=0, label="CFG: "];
fixed_118 -> fixed_119  [key=0, label="AST: "];
fixed_118 -> fixed_101  [key=0, label="CFG: "];
fixed_118 -> fixed_101  [key=1, label="DDG: false"];
fixed_119 -> vulnerable_134  [key=0];
fixed_120 -> fixed_100  [key=0, label="CFG: "];
fixed_121 -> vulnerable_134  [key=0];
fixed_123 -> vulnerable_134  [key=0];
fixed_144 -> fixed_145  [key=0, label="AST: "];
fixed_144 -> fixed_145  [key=1, label="DDG: "];
fixed_144 -> fixed_147  [key=0, label="AST: "];
fixed_144 -> fixed_146  [key=0, label="AST: "];
fixed_144 -> fixed_146  [key=1, label="DDG: "];
fixed_144 -> fixed_148  [key=0, label="AST: "];
fixed_144 -> fixed_148  [key=1, label="CFG: "];
fixed_145 -> fixed_148  [key=0, label="DDG: p1"];
fixed_146 -> fixed_148  [key=0, label="DDG: p2"];
fixed_147 -> vulnerable_134  [key=0];
fixed_148 -> vulnerable_134  [key=0];
fixed_174 -> fixed_175  [key=0, label="AST: "];
fixed_174 -> fixed_175  [key=1, label="DDG: "];
fixed_174 -> fixed_176  [key=0, label="AST: "];
fixed_174 -> fixed_177  [key=0, label="AST: "];
fixed_174 -> fixed_177  [key=1, label="CFG: "];
fixed_175 -> fixed_177  [key=0, label="DDG: p1"];
fixed_176 -> vulnerable_134  [key=0];
fixed_177 -> vulnerable_134  [key=0];
fixed_170 -> fixed_171  [key=0, label="AST: "];
fixed_170 -> fixed_171  [key=1, label="DDG: "];
fixed_170 -> fixed_172  [key=0, label="AST: "];
fixed_170 -> fixed_173  [key=0, label="AST: "];
fixed_170 -> fixed_173  [key=1, label="CFG: "];
fixed_171 -> fixed_173  [key=0, label="DDG: p1"];
fixed_172 -> vulnerable_134  [key=0];
fixed_173 -> vulnerable_134  [key=0];
fixed_166 -> fixed_167  [key=0, label="AST: "];
fixed_166 -> fixed_167  [key=1, label="DDG: "];
fixed_166 -> fixed_168  [key=0, label="AST: "];
fixed_166 -> fixed_169  [key=0, label="AST: "];
fixed_166 -> fixed_169  [key=1, label="CFG: "];
fixed_167 -> fixed_169  [key=0, label="DDG: p1"];
fixed_168 -> vulnerable_134  [key=0];
fixed_169 -> vulnerable_134  [key=0];
fixed_154 -> fixed_155  [key=0, label="AST: "];
fixed_154 -> fixed_155  [key=1, label="DDG: "];
fixed_154 -> fixed_157  [key=0, label="AST: "];
fixed_154 -> fixed_156  [key=0, label="AST: "];
fixed_154 -> fixed_156  [key=1, label="DDG: "];
fixed_154 -> fixed_158  [key=0, label="AST: "];
fixed_154 -> fixed_158  [key=1, label="CFG: "];
fixed_155 -> fixed_158  [key=0, label="DDG: p1"];
fixed_156 -> fixed_158  [key=0, label="DDG: p2"];
fixed_157 -> vulnerable_134  [key=0];
fixed_158 -> vulnerable_134  [key=0];
fixed_149 -> fixed_150  [key=0, label="AST: "];
fixed_149 -> fixed_150  [key=1, label="DDG: "];
fixed_149 -> fixed_152  [key=0, label="AST: "];
fixed_149 -> fixed_151  [key=0, label="AST: "];
fixed_149 -> fixed_151  [key=1, label="DDG: "];
fixed_149 -> fixed_153  [key=0, label="AST: "];
fixed_149 -> fixed_153  [key=1, label="CFG: "];
fixed_150 -> fixed_153  [key=0, label="DDG: p1"];
fixed_151 -> fixed_153  [key=0, label="DDG: p2"];
fixed_152 -> vulnerable_134  [key=0];
fixed_153 -> vulnerable_134  [key=0];
fixed_140 -> fixed_141  [key=0, label="AST: "];
fixed_140 -> fixed_141  [key=1, label="DDG: "];
fixed_140 -> fixed_142  [key=0, label="AST: "];
fixed_140 -> fixed_143  [key=0, label="AST: "];
fixed_140 -> fixed_143  [key=1, label="CFG: "];
fixed_141 -> fixed_143  [key=0, label="DDG: p1"];
fixed_142 -> vulnerable_134  [key=0];
fixed_143 -> vulnerable_134  [key=0];
fixed_134 -> fixed_135  [key=0, label="AST: "];
fixed_134 -> fixed_136  [key=0, label="AST: "];
fixed_134 -> fixed_136  [key=1, label="CFG: "];
fixed_135 -> vulnerable_134  [key=0];
fixed_136 -> vulnerable_134  [key=0];
fixed_163 -> fixed_164  [key=0, label="AST: "];
fixed_163 -> fixed_165  [key=0, label="AST: "];
fixed_163 -> fixed_165  [key=1, label="CFG: "];
fixed_164 -> vulnerable_134  [key=0];
fixed_165 -> vulnerable_134  [key=0];
}
