digraph "&lt;global&gt;" {
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(UNKNOWN,PHP_FUNCTION(mcrypt_generic)
{
	zval *mcryptind;,PHP_FUNCTION(mcrypt_generic)
{
	zval *mcryptind;)<SUB>1</SUB>>];
vulnerable_9 [label="<(LOCAL,char* data: char*)<SUB>4</SUB>>"];
vulnerable_10 [label="<(LOCAL,int data_len: int)<SUB>5</SUB>>"];
vulnerable_11 [label="<(LOCAL,php_mcrypt* pm: php_mcrypt*)<SUB>6</SUB>>"];
vulnerable_12 [label="<(LOCAL,unsigned char* data_s: unsigned char*)<SUB>7</SUB>>"];
vulnerable_13 [label="<(LOCAL,int block_size: int)<SUB>8</SUB>>"];
vulnerable_14 [label="<(LOCAL,int data_size: int)<SUB>8</SUB>>"];
vulnerable_15 [label=<(UNKNOWN,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...)<SUB>10</SUB>>];
vulnerable_16 [label=<(UNKNOWN,ZEND_FETCH_RESOURCE(pm, php_mcrypt *, &amp;mcryptin...,ZEND_FETCH_RESOURCE(pm, php_mcrypt *, &amp;mcryptin...)<SUB>13</SUB>>];
vulnerable_17 [label=<(UNKNOWN,PHP_MCRYPT_INIT_CHECK
 
	if (data_len == 0) {
	...,PHP_MCRYPT_INIT_CHECK
 
	if (data_len == 0) {
	...)<SUB>14</SUB>>];
vulnerable_18 [label=<(UNKNOWN,if (mcrypt_enc_is_block_mode(pm-&gt;td) == 1) { /*...,if (mcrypt_enc_is_block_mode(pm-&gt;td) == 1) { /*...)<SUB>22</SUB>>];
vulnerable_19 [label=<(UNKNOWN,else { /* It's not a block algorithm */
		data_...,else { /* It's not a block algorithm */
		data_...)<SUB>28</SUB>>];
vulnerable_20 [label=<(UNKNOWN,mcrypt_generic(pm-&gt;td, data_s, data_size);,mcrypt_generic(pm-&gt;td, data_s, data_size);)<SUB>34</SUB>>];
vulnerable_21 [label=<(UNKNOWN,data_s[data_size] = '\0';,data_s[data_size] = '\0';)<SUB>35</SUB>>];
vulnerable_22 [label=<(UNKNOWN,RETVAL_STRINGL(data_s, data_size, 1);,RETVAL_STRINGL(data_s, data_size, 1);)<SUB>37</SUB>>];
vulnerable_23 [label="<(LOCAL,efree : efree)<SUB>38</SUB>>"];
vulnerable_24 [label=<(UNKNOWN,},})<SUB>39</SUB>>];
vulnerable_25 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_40 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_41 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_42 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(UNKNOWN,PHP_FUNCTION(mcrypt_generic)
{
	zval *mcryptind;,PHP_FUNCTION(mcrypt_generic)
{
	zval *mcryptind;)<SUB>1</SUB>>];
fixed_9 [label="<(LOCAL,char* data: char*)<SUB>4</SUB>>"];
fixed_10 [label="<(LOCAL,int data_len: int)<SUB>5</SUB>>"];
fixed_11 [label="<(LOCAL,php_mcrypt* pm: php_mcrypt*)<SUB>6</SUB>>"];
fixed_12 [label="<(LOCAL,unsigned char* data_s: unsigned char*)<SUB>7</SUB>>"];
fixed_13 [label="<(LOCAL,int block_size: int)<SUB>8</SUB>>"];
fixed_14 [label="<(LOCAL,int data_size: int)<SUB>8</SUB>>"];
fixed_15 [label=<(UNKNOWN,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...)<SUB>10</SUB>>];
fixed_16 [label=<(UNKNOWN,ZEND_FETCH_RESOURCE(pm, php_mcrypt *, &amp;mcryptin...,ZEND_FETCH_RESOURCE(pm, php_mcrypt *, &amp;mcryptin...)<SUB>14</SUB>>];
fixed_17 [label=<(UNKNOWN,PHP_MCRYPT_INIT_CHECK
 
	if (data_len == 0) {
	...,PHP_MCRYPT_INIT_CHECK
 
	if (data_len == 0) {
	...)<SUB>15</SUB>>];
fixed_18 [label=<(UNKNOWN,if (mcrypt_enc_is_block_mode(pm-&gt;td) == 1) { /*...,if (mcrypt_enc_is_block_mode(pm-&gt;td) == 1) { /*...)<SUB>23</SUB>>];
fixed_19 [label=<(UNKNOWN,else { /* It's not a block algorithm */
		data_...,else { /* It's not a block algorithm */
		data_...)<SUB>33</SUB>>];
fixed_20 [label=<(UNKNOWN,mcrypt_generic(pm-&gt;td, data_s, data_size);,mcrypt_generic(pm-&gt;td, data_s, data_size);)<SUB>40</SUB>>];
fixed_21 [label=<(UNKNOWN,data_s[data_size] = '\0';,data_s[data_size] = '\0';)<SUB>41</SUB>>];
fixed_22 [label=<(UNKNOWN,RETVAL_STRINGL(data_s, data_size, 1);,RETVAL_STRINGL(data_s, data_size, 1);)<SUB>43</SUB>>];
fixed_23 [label="<(LOCAL,efree : efree)<SUB>44</SUB>>"];
fixed_24 [label=<(UNKNOWN,},})<SUB>45</SUB>>];
fixed_25 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_40 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_41 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_42 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_25  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_8  [key=0, label="CFG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_10  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_11  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_12  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_13  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_14  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_17  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_18  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_19  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_20  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_21  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_22  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_23  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_24  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_15  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_16  [key=0, label="CFG: "];
vulnerable_16 -> vulnerable_17  [key=0, label="CFG: "];
vulnerable_17 -> vulnerable_18  [key=0, label="CFG: "];
vulnerable_18 -> vulnerable_19  [key=0, label="CFG: "];
vulnerable_19 -> vulnerable_20  [key=0, label="CFG: "];
vulnerable_20 -> vulnerable_21  [key=0, label="CFG: "];
vulnerable_21 -> vulnerable_22  [key=0, label="CFG: "];
vulnerable_22 -> vulnerable_24  [key=0, label="CFG: "];
vulnerable_24 -> vulnerable_25  [key=0, label="CFG: "];
vulnerable_40 -> vulnerable_41  [key=0, label="AST: "];
vulnerable_40 -> vulnerable_42  [key=0, label="AST: "];
vulnerable_40 -> vulnerable_42  [key=1, label="CFG: "];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_25  [key=0, label="AST: "];
fixed_6 -> fixed_8  [key=0, label="CFG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_7 -> fixed_9  [key=0, label="AST: "];
fixed_7 -> fixed_10  [key=0, label="AST: "];
fixed_7 -> fixed_11  [key=0, label="AST: "];
fixed_7 -> fixed_12  [key=0, label="AST: "];
fixed_7 -> fixed_13  [key=0, label="AST: "];
fixed_7 -> fixed_14  [key=0, label="AST: "];
fixed_7 -> fixed_15  [key=0, label="AST: "];
fixed_7 -> fixed_16  [key=0, label="AST: "];
fixed_7 -> fixed_17  [key=0, label="AST: "];
fixed_7 -> fixed_18  [key=0, label="AST: "];
fixed_7 -> fixed_19  [key=0, label="AST: "];
fixed_7 -> fixed_20  [key=0, label="AST: "];
fixed_7 -> fixed_21  [key=0, label="AST: "];
fixed_7 -> fixed_22  [key=0, label="AST: "];
fixed_7 -> fixed_23  [key=0, label="AST: "];
fixed_7 -> fixed_24  [key=0, label="AST: "];
fixed_8 -> fixed_15  [key=0, label="CFG: "];
fixed_9 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_10 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_11 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_12 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_13 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_14 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_15 -> fixed_16  [key=0, label="CFG: "];
fixed_16 -> fixed_17  [key=0, label="CFG: "];
fixed_17 -> fixed_18  [key=0, label="CFG: "];
fixed_18 -> fixed_19  [key=0, label="CFG: "];
fixed_19 -> fixed_20  [key=0, label="CFG: "];
fixed_20 -> fixed_21  [key=0, label="CFG: "];
fixed_21 -> fixed_22  [key=0, label="CFG: "];
fixed_22 -> fixed_24  [key=0, label="CFG: "];
fixed_23 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_24 -> fixed_25  [key=0, label="CFG: "];
fixed_25 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_40 -> fixed_41  [key=0, label="AST: "];
fixed_40 -> fixed_42  [key=0, label="AST: "];
fixed_40 -> fixed_42  [key=1, label="CFG: "];
fixed_41 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
fixed_42 -> vulnerable_6  [color=blue, key=0, label="Connection to Vulnerable Root", penwidth="2.0", style=dashed];
}
