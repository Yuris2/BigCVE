digraph "&lt;global&gt;" {  
"6" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
"7" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>> ]
"8" [label = <(UNKNOWN,int phar_get_entry_data(phar_entry_data **ret, ...,int phar_get_entry_data(phar_entry_data **ret, ...)<SUB>1</SUB>> ]
"9" [label = <(UNKNOWN,return SUCCESS;,return SUCCESS;)<SUB>155</SUB>> ]
"10" [label = <(UNKNOWN,},})<SUB>156</SUB>> ]
"11" [label = <(UNKNOWN,phar_entry_data *phar_get_or_create_entry_data(...,phar_entry_data *phar_get_or_create_entry_data(...)<SUB>162</SUB>> ]
"12" [label = <(UNKNOWN,int phar_open_archive_fp(phar_archive_data *pha...,int phar_open_archive_fp(phar_archive_data *pha...)<SUB>274</SUB>> ]
"13" [label = <(UNKNOWN,int phar_copy_entry_fp(phar_entry_info *source,...,int phar_copy_entry_fp(phar_entry_info *source,...)<SUB>295</SUB>> ]
"14" [label = <(UNKNOWN,int phar_open_entry_fp(phar_entry_info *entry, ...,int phar_open_entry_fp(phar_entry_info *entry, ...)<SUB>339</SUB>> ]
"15" [label = <(UNKNOWN,int phar_create_writeable_entry(phar_archive_da...,int phar_create_writeable_entry(phar_archive_da...)<SUB>455</SUB>> ]
"16" [label = <(UNKNOWN,int phar_separate_entry_fp(phar_entry_info *ent...,int phar_separate_entry_fp(phar_entry_info *ent...)<SUB>508</SUB>> ]
"17" [label = <(UNKNOWN,phar_entry_info * phar_open_jit(phar_archive_da...,phar_entry_info * phar_open_jit(phar_archive_da...)<SUB>557</SUB>> ]
"18" [label = <(UNKNOWN,PHP_PHAR_API int phar_resolve_alias(char *alias...,PHP_PHAR_API int phar_resolve_alias(char *alias...)<SUB>574</SUB>> ]
"19" [label = <(UNKNOWN,int phar_free_alias(phar_archive_data *phar, ch...,int phar_free_alias(phar_archive_data *phar, ch...)<SUB>586</SUB>> ]
"20" [label = <(UNKNOWN,int phar_get_archive(phar_archive_data **archiv...,int phar_get_archive(phar_archive_data **archiv...)<SUB>609</SUB>> ]
"21" [label = <(METHOD,phar_compress_filter)<SUB>817</SUB>> ]
"22" [label = <(PARAM,phar_entry_info * entry)<SUB>817</SUB>> ]
"23" [label = <(PARAM,int return_unknown)<SUB>817</SUB>> ]
"24" [label = <(BLOCK,{
	switch (entry-&gt;flags &amp; PHAR_ENT_COMPRESSION_...,{
	switch (entry-&gt;flags &amp; PHAR_ENT_COMPRESSION_...)<SUB>818</SUB>> ]
"25" [label = <(CONTROL_STRUCTURE,SWITCH,switch(entry-&gt;flags &amp; PHAR_ENT_COMPRESSION_MASK))<SUB>819</SUB>> ]
"26" [label = <(&lt;operator&gt;.and,entry-&gt;flags &amp; PHAR_ENT_COMPRESSION_MASK)<SUB>819</SUB>> ]
"27" [label = <(&lt;operator&gt;.indirectFieldAccess,entry-&gt;flags)<SUB>819</SUB>> ]
"28" [label = <(IDENTIFIER,entry,entry-&gt;flags &amp; PHAR_ENT_COMPRESSION_MASK)<SUB>819</SUB>> ]
"29" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>819</SUB>> ]
"30" [label = <(IDENTIFIER,PHAR_ENT_COMPRESSION_MASK,entry-&gt;flags &amp; PHAR_ENT_COMPRESSION_MASK)<SUB>819</SUB>> ]
"31" [label = <(BLOCK,{
	case PHAR_ENT_COMPRESSED_GZ:
		return &quot;zlib....,{
	case PHAR_ENT_COMPRESSED_GZ:
		return &quot;zlib....)<SUB>819</SUB>> ]
"32" [label = <(JUMP_TARGET,case)<SUB>820</SUB>> ]
"33" [label = <(IDENTIFIER,PHAR_ENT_COMPRESSED_GZ,{
	case PHAR_ENT_COMPRESSED_GZ:
		return &quot;zlib....)<SUB>820</SUB>> ]
"34" [label = <(RETURN,return &quot;zlib.deflate&quot;;,return &quot;zlib.deflate&quot;;)<SUB>821</SUB>> ]
"35" [label = <(LITERAL,&quot;zlib.deflate&quot;,return &quot;zlib.deflate&quot;;)<SUB>821</SUB>> ]
"36" [label = <(JUMP_TARGET,case)<SUB>822</SUB>> ]
"37" [label = <(IDENTIFIER,PHAR_ENT_COMPRESSED_BZ2,{
	case PHAR_ENT_COMPRESSED_GZ:
		return &quot;zlib....)<SUB>822</SUB>> ]
"38" [label = <(RETURN,return &quot;bzip2.compress&quot;;,return &quot;bzip2.compress&quot;;)<SUB>823</SUB>> ]
"39" [label = <(LITERAL,&quot;bzip2.compress&quot;,return &quot;bzip2.compress&quot;;)<SUB>823</SUB>> ]
"40" [label = <(JUMP_TARGET,default)<SUB>824</SUB>> ]
"41" [label = <(RETURN,return return_unknown ? &quot;unknown&quot; : NULL;,return return_unknown ? &quot;unknown&quot; : NULL;)<SUB>825</SUB>> ]
"42" [label = <(&lt;operator&gt;.conditional,return_unknown ? &quot;unknown&quot; : NULL)<SUB>825</SUB>> ]
"43" [label = <(IDENTIFIER,return_unknown,return_unknown ? &quot;unknown&quot; : NULL)<SUB>825</SUB>> ]
"44" [label = <(LITERAL,&quot;unknown&quot;,return_unknown ? &quot;unknown&quot; : NULL)<SUB>825</SUB>> ]
"45" [label = <(IDENTIFIER,NULL,return_unknown ? &quot;unknown&quot; : NULL)<SUB>825</SUB>> ]
"46" [label = <(METHOD_RETURN,char*)<SUB>817</SUB>> ]
"48" [label = <(METHOD,phar_decompress_filter)<SUB>833</SUB>> ]
"49" [label = <(PARAM,phar_entry_info * entry)<SUB>833</SUB>> ]
"50" [label = <(PARAM,int return_unknown)<SUB>833</SUB>> ]
"51" [label = <(BLOCK,{
	php_uint32 flags;

	if (entry-&gt;is_modified) ...,{
	php_uint32 flags;

	if (entry-&gt;is_modified) ...)<SUB>834</SUB>> ]
"52" [label = <(LOCAL,php_uint32 flags: php_uint32)<SUB>835</SUB>> ]
"53" [label = <(CONTROL_STRUCTURE,IF,if (entry-&gt;is_modified))<SUB>837</SUB>> ]
"54" [label = <(&lt;operator&gt;.indirectFieldAccess,entry-&gt;is_modified)<SUB>837</SUB>> ]
"55" [label = <(IDENTIFIER,entry,if (entry-&gt;is_modified))<SUB>837</SUB>> ]
"56" [label = <(FIELD_IDENTIFIER,is_modified,is_modified)<SUB>837</SUB>> ]
"57" [label = <(BLOCK,{
		flags = entry-&gt;old_flags;
	},{
		flags = entry-&gt;old_flags;
	})<SUB>837</SUB>> ]
"58" [label = <(&lt;operator&gt;.assignment,flags = entry-&gt;old_flags)<SUB>838</SUB>> ]
"59" [label = <(IDENTIFIER,flags,flags = entry-&gt;old_flags)<SUB>838</SUB>> ]
"60" [label = <(&lt;operator&gt;.indirectFieldAccess,entry-&gt;old_flags)<SUB>838</SUB>> ]
"61" [label = <(IDENTIFIER,entry,flags = entry-&gt;old_flags)<SUB>838</SUB>> ]
"62" [label = <(FIELD_IDENTIFIER,old_flags,old_flags)<SUB>838</SUB>> ]
"63" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>839</SUB>> ]
"64" [label = <(BLOCK,{
		flags = entry-&gt;flags;
	},{
		flags = entry-&gt;flags;
	})<SUB>839</SUB>> ]
"65" [label = <(&lt;operator&gt;.assignment,flags = entry-&gt;flags)<SUB>840</SUB>> ]
"66" [label = <(IDENTIFIER,flags,flags = entry-&gt;flags)<SUB>840</SUB>> ]
"67" [label = <(&lt;operator&gt;.indirectFieldAccess,entry-&gt;flags)<SUB>840</SUB>> ]
"68" [label = <(IDENTIFIER,entry,flags = entry-&gt;flags)<SUB>840</SUB>> ]
"69" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>840</SUB>> ]
"70" [label = <(CONTROL_STRUCTURE,SWITCH,switch(flags &amp; PHAR_ENT_COMPRESSION_MASK))<SUB>843</SUB>> ]
"71" [label = <(&lt;operator&gt;.and,flags &amp; PHAR_ENT_COMPRESSION_MASK)<SUB>843</SUB>> ]
"72" [label = <(IDENTIFIER,flags,flags &amp; PHAR_ENT_COMPRESSION_MASK)<SUB>843</SUB>> ]
"73" [label = <(IDENTIFIER,PHAR_ENT_COMPRESSION_MASK,flags &amp; PHAR_ENT_COMPRESSION_MASK)<SUB>843</SUB>> ]
"74" [label = <(BLOCK,{
		case PHAR_ENT_COMPRESSED_GZ:
			return &quot;zli...,{
		case PHAR_ENT_COMPRESSED_GZ:
			return &quot;zli...)<SUB>843</SUB>> ]
"75" [label = <(JUMP_TARGET,case)<SUB>844</SUB>> ]
"76" [label = <(IDENTIFIER,PHAR_ENT_COMPRESSED_GZ,{
		case PHAR_ENT_COMPRESSED_GZ:
			return &quot;zli...)<SUB>844</SUB>> ]
"77" [label = <(RETURN,return &quot;zlib.inflate&quot;;,return &quot;zlib.inflate&quot;;)<SUB>845</SUB>> ]
"78" [label = <(LITERAL,&quot;zlib.inflate&quot;,return &quot;zlib.inflate&quot;;)<SUB>845</SUB>> ]
"79" [label = <(JUMP_TARGET,case)<SUB>846</SUB>> ]
"80" [label = <(IDENTIFIER,PHAR_ENT_COMPRESSED_BZ2,{
		case PHAR_ENT_COMPRESSED_GZ:
			return &quot;zli...)<SUB>846</SUB>> ]
"81" [label = <(RETURN,return &quot;bzip2.decompress&quot;;,return &quot;bzip2.decompress&quot;;)<SUB>847</SUB>> ]
"82" [label = <(LITERAL,&quot;bzip2.decompress&quot;,return &quot;bzip2.decompress&quot;;)<SUB>847</SUB>> ]
"83" [label = <(JUMP_TARGET,default)<SUB>848</SUB>> ]
"84" [label = <(RETURN,return return_unknown ? &quot;unknown&quot; : NULL;,return return_unknown ? &quot;unknown&quot; : NULL;)<SUB>849</SUB>> ]
"85" [label = <(&lt;operator&gt;.conditional,return_unknown ? &quot;unknown&quot; : NULL)<SUB>849</SUB>> ]
"86" [label = <(IDENTIFIER,return_unknown,return_unknown ? &quot;unknown&quot; : NULL)<SUB>849</SUB>> ]
"87" [label = <(LITERAL,&quot;unknown&quot;,return_unknown ? &quot;unknown&quot; : NULL)<SUB>849</SUB>> ]
"88" [label = <(IDENTIFIER,NULL,return_unknown ? &quot;unknown&quot; : NULL)<SUB>849</SUB>> ]
"89" [label = <(METHOD_RETURN,char*)<SUB>833</SUB>> ]
"91" [label = <(UNKNOWN,phar_entry_info *phar_get_entry_info(phar_archi...,phar_entry_info *phar_get_entry_info(phar_archi...)<SUB>857</SUB>> ]
"92" [label = <(UNKNOWN,phar_entry_info *phar_get_entry_info_dir(phar_a...,phar_entry_info *phar_get_entry_info_dir(phar_a...)<SUB>867</SUB>> ]
"93" [label = <(LOCAL,static const char[] hexChars: static const char[])<SUB>1038</SUB>> ]
"94" [label = <(&lt;operator&gt;.assignment,hexChars[] = &quot;0123456789ABCDEF&quot;)<SUB>1038</SUB>> ]
"95" [label = <(IDENTIFIER,hexChars,hexChars[] = &quot;0123456789ABCDEF&quot;)<SUB>1038</SUB>> ]
"96" [label = <(LITERAL,&quot;0123456789ABCDEF&quot;,hexChars[] = &quot;0123456789ABCDEF&quot;)<SUB>1038</SUB>> ]
"97" [label = <(UNKNOWN,static int phar_hex_str(const char *digest, siz...,static int phar_hex_str(const char *digest, siz...)<SUB>1040</SUB>> ]
"98" [label = <(UNKNOWN,static int phar_call_openssl_signverify(int is_...,static int phar_call_openssl_signverify(int is_...)<SUB>1057</SUB>> ]
"99" [label = <(UNKNOWN,int phar_verify_signature(php_stream *fp, size_...,int phar_verify_signature(php_stream *fp, size_...)<SUB>1170</SUB>> ]
"100" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "6" -> "7"  [ label = "AST: "] 
  "6" -> "100"  [ label = "AST: "] 
  "7" -> "8"  [ label = "AST: "] 
  "7" -> "9"  [ label = "AST: "] 
  "7" -> "10"  [ label = "AST: "] 
  "7" -> "11"  [ label = "AST: "] 
  "7" -> "12"  [ label = "AST: "] 
  "7" -> "13"  [ label = "AST: "] 
  "7" -> "14"  [ label = "AST: "] 
  "7" -> "15"  [ label = "AST: "] 
  "7" -> "16"  [ label = "AST: "] 
  "7" -> "17"  [ label = "AST: "] 
  "7" -> "18"  [ label = "AST: "] 
  "7" -> "19"  [ label = "AST: "] 
  "7" -> "20"  [ label = "AST: "] 
  "7" -> "21"  [ label = "AST: "] 
  "7" -> "48"  [ label = "AST: "] 
  "7" -> "91"  [ label = "AST: "] 
  "7" -> "92"  [ label = "AST: "] 
  "7" -> "93"  [ label = "AST: "] 
  "7" -> "94"  [ label = "AST: "] 
  "7" -> "97"  [ label = "AST: "] 
  "7" -> "98"  [ label = "AST: "] 
  "7" -> "99"  [ label = "AST: "] 
  "21" -> "22"  [ label = "AST: "] 
  "21" -> "23"  [ label = "AST: "] 
  "21" -> "24"  [ label = "AST: "] 
  "21" -> "46"  [ label = "AST: "] 
  "24" -> "25"  [ label = "AST: "] 
  "25" -> "26"  [ label = "AST: "] 
  "25" -> "31"  [ label = "AST: "] 
  "26" -> "27"  [ label = "AST: "] 
  "26" -> "30"  [ label = "AST: "] 
  "27" -> "28"  [ label = "AST: "] 
  "27" -> "29"  [ label = "AST: "] 
  "31" -> "32"  [ label = "AST: "] 
  "31" -> "33"  [ label = "AST: "] 
  "31" -> "34"  [ label = "AST: "] 
  "31" -> "36"  [ label = "AST: "] 
  "31" -> "37"  [ label = "AST: "] 
  "31" -> "38"  [ label = "AST: "] 
  "31" -> "40"  [ label = "AST: "] 
  "31" -> "41"  [ label = "AST: "] 
  "34" -> "35"  [ label = "AST: "] 
  "38" -> "39"  [ label = "AST: "] 
  "41" -> "42"  [ label = "AST: "] 
  "42" -> "43"  [ label = "AST: "] 
  "42" -> "44"  [ label = "AST: "] 
  "42" -> "45"  [ label = "AST: "] 
  "48" -> "49"  [ label = "AST: "] 
  "48" -> "50"  [ label = "AST: "] 
  "48" -> "51"  [ label = "AST: "] 
  "48" -> "89"  [ label = "AST: "] 
  "51" -> "52"  [ label = "AST: "] 
  "51" -> "53"  [ label = "AST: "] 
  "51" -> "70"  [ label = "AST: "] 
  "53" -> "54"  [ label = "AST: "] 
  "53" -> "57"  [ label = "AST: "] 
  "53" -> "63"  [ label = "AST: "] 
  "54" -> "55"  [ label = "AST: "] 
  "54" -> "56"  [ label = "AST: "] 
  "57" -> "58"  [ label = "AST: "] 
  "58" -> "59"  [ label = "AST: "] 
  "58" -> "60"  [ label = "AST: "] 
  "60" -> "61"  [ label = "AST: "] 
  "60" -> "62"  [ label = "AST: "] 
  "63" -> "64"  [ label = "AST: "] 
  "64" -> "65"  [ label = "AST: "] 
  "65" -> "66"  [ label = "AST: "] 
  "65" -> "67"  [ label = "AST: "] 
  "67" -> "68"  [ label = "AST: "] 
  "67" -> "69"  [ label = "AST: "] 
  "70" -> "71"  [ label = "AST: "] 
  "70" -> "74"  [ label = "AST: "] 
  "71" -> "72"  [ label = "AST: "] 
  "71" -> "73"  [ label = "AST: "] 
  "74" -> "75"  [ label = "AST: "] 
  "74" -> "76"  [ label = "AST: "] 
  "74" -> "77"  [ label = "AST: "] 
  "74" -> "79"  [ label = "AST: "] 
  "74" -> "80"  [ label = "AST: "] 
  "74" -> "81"  [ label = "AST: "] 
  "74" -> "83"  [ label = "AST: "] 
  "74" -> "84"  [ label = "AST: "] 
  "77" -> "78"  [ label = "AST: "] 
  "81" -> "82"  [ label = "AST: "] 
  "84" -> "85"  [ label = "AST: "] 
  "85" -> "86"  [ label = "AST: "] 
  "85" -> "87"  [ label = "AST: "] 
  "85" -> "88"  [ label = "AST: "] 
  "94" -> "95"  [ label = "AST: "] 
  "94" -> "96"  [ label = "AST: "] 
  "8" -> "9"  [ label = "CFG: "] 
  "9" -> "10"  [ label = "CFG: "] 
  "10" -> "11"  [ label = "CFG: "] 
  "11" -> "12"  [ label = "CFG: "] 
  "12" -> "13"  [ label = "CFG: "] 
  "13" -> "14"  [ label = "CFG: "] 
  "14" -> "15"  [ label = "CFG: "] 
  "15" -> "16"  [ label = "CFG: "] 
  "16" -> "17"  [ label = "CFG: "] 
  "17" -> "18"  [ label = "CFG: "] 
  "18" -> "19"  [ label = "CFG: "] 
  "19" -> "20"  [ label = "CFG: "] 
  "20" -> "91"  [ label = "CFG: "] 
  "91" -> "92"  [ label = "CFG: "] 
  "92" -> "94"  [ label = "CFG: "] 
  "94" -> "97"  [ label = "CFG: "] 
  "97" -> "98"  [ label = "CFG: "] 
  "98" -> "99"  [ label = "CFG: "] 
  "99" -> "100"  [ label = "CFG: "] 
  "6" -> "8"  [ label = "CFG: "] 
  "94" -> "100"  [ label = "DDG: hexChars"] 
  "94" -> "100"  [ label = "DDG: hexChars[] = &quot;0123456789ABCDEF&quot;"] 
  "6" -> "94"  [ label = "DDG: "] 
}
