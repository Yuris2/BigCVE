digraph "AcquireMagickMemory" {
vulnerable_72 [label=<(METHOD,&lt;operator&gt;.multiplication)>];
vulnerable_73 [label=<(PARAM,p1)>];
vulnerable_74 [label=<(PARAM,p2)>];
vulnerable_75 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_76 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(UNKNOWN,MagickExport,MagickExport)<SUB>1</SUB>>];
vulnerable_9 [label=<(METHOD,AcquireQuantumMemory)<SUB>1</SUB>>];
vulnerable_10 [label=<(PARAM,const size_t count)<SUB>1</SUB>>];
vulnerable_11 [label=<(PARAM,const size_t quantum)<SUB>1</SUB>>];
vulnerable_12 [label=<(BLOCK,{
   size_t
     extent;
 
  if (CheckMemoryOve...,{
   size_t
     extent;
 
  if (CheckMemoryOve...)<SUB>2</SUB>>];
vulnerable_13 [label="<(LOCAL,size_t extent: size_t)<SUB>4</SUB>>"];
vulnerable_14 [label=<(CONTROL_STRUCTURE,IF,if (CheckMemoryOverflow(count,quantum) != MagickFalse))<SUB>6</SUB>>];
vulnerable_15 [label=<(&lt;operator&gt;.notEquals,CheckMemoryOverflow(count,quantum) != MagickFalse)<SUB>6</SUB>>];
vulnerable_16 [label=<(CheckMemoryOverflow,CheckMemoryOverflow(count,quantum))<SUB>6</SUB>>];
vulnerable_17 [label=<(IDENTIFIER,count,CheckMemoryOverflow(count,quantum))<SUB>6</SUB>>];
vulnerable_18 [label=<(IDENTIFIER,quantum,CheckMemoryOverflow(count,quantum))<SUB>6</SUB>>];
vulnerable_19 [label=<(IDENTIFIER,MagickFalse,CheckMemoryOverflow(count,quantum) != MagickFalse)<SUB>6</SUB>>];
vulnerable_20 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>];
vulnerable_21 [label=<(RETURN,return((void *) NULL);,return((void *) NULL);)<SUB>7</SUB>>];
vulnerable_22 [label=<(&lt;operator&gt;.cast,(void *) NULL)<SUB>7</SUB>>];
vulnerable_23 [label=<(UNKNOWN,void *,void *)<SUB>7</SUB>>];
vulnerable_24 [label=<(IDENTIFIER,NULL,(void *) NULL)<SUB>7</SUB>>];
vulnerable_25 [label=<(&lt;operator&gt;.assignment,extent=count*quantum)<SUB>8</SUB>>];
vulnerable_26 [label=<(IDENTIFIER,extent,extent=count*quantum)<SUB>8</SUB>>];
vulnerable_27 [label=<(&lt;operator&gt;.multiplication,count*quantum)<SUB>8</SUB>>];
vulnerable_28 [label=<(IDENTIFIER,count,count*quantum)<SUB>8</SUB>>];
vulnerable_29 [label=<(IDENTIFIER,quantum,count*quantum)<SUB>8</SUB>>];
vulnerable_30 [label=<(RETURN,return(AcquireMagickMemory(extent));,return(AcquireMagickMemory(extent));)<SUB>9</SUB>>];
vulnerable_31 [label=<(AcquireMagickMemory,AcquireMagickMemory(extent))<SUB>9</SUB>>];
vulnerable_32 [label=<(IDENTIFIER,extent,AcquireMagickMemory(extent))<SUB>9</SUB>>];
vulnerable_33 [label=<(METHOD_RETURN,void*)<SUB>1</SUB>>];
vulnerable_35 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_57 [label=<(METHOD,CheckMemoryOverflow)>];
vulnerable_58 [label=<(PARAM,p1)>];
vulnerable_59 [label=<(PARAM,p2)>];
vulnerable_60 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_61 [label=<(METHOD_RETURN,ANY)>];
vulnerable_67 [label=<(METHOD,&lt;operator&gt;.assignment)>];
vulnerable_68 [label=<(PARAM,p1)>];
vulnerable_69 [label=<(PARAM,p2)>];
vulnerable_70 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_71 [label=<(METHOD_RETURN,ANY)>];
vulnerable_62 [label=<(METHOD,&lt;operator&gt;.cast)>];
vulnerable_63 [label=<(PARAM,p1)>];
vulnerable_64 [label=<(PARAM,p2)>];
vulnerable_65 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_66 [label=<(METHOD_RETURN,ANY)>];
vulnerable_52 [label=<(METHOD,&lt;operator&gt;.notEquals)>];
vulnerable_53 [label=<(PARAM,p1)>];
vulnerable_54 [label=<(PARAM,p2)>];
vulnerable_55 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_56 [label=<(METHOD_RETURN,ANY)>];
vulnerable_46 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_47 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_48 [label=<(METHOD_RETURN,ANY)>];
vulnerable_77 [label=<(METHOD,AcquireMagickMemory)>];
vulnerable_78 [label=<(PARAM,p1)>];
vulnerable_79 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_80 [label=<(METHOD_RETURN,ANY)>];
fixed_72 [label=<(METHOD,&lt;operator&gt;.multiplication)>];
fixed_73 [label=<(PARAM,p1)>];
fixed_74 [label=<(PARAM,p2)>];
fixed_75 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_76 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(UNKNOWN,MagickExport,MagickExport)<SUB>1</SUB>>];
fixed_9 [label=<(METHOD,AcquireQuantumMemory)<SUB>1</SUB>>];
fixed_10 [label=<(PARAM,const size_t count)<SUB>1</SUB>>];
fixed_11 [label=<(PARAM,const size_t quantum)<SUB>1</SUB>>];
fixed_12 [label=<(BLOCK,{
   size_t
     extent;
 
  if (HeapOverflowSa...,{
   size_t
     extent;
 
  if (HeapOverflowSa...)<SUB>2</SUB>>];
fixed_13 [label="<(LOCAL,size_t extent: size_t)<SUB>4</SUB>>"];
fixed_14 [label=<(CONTROL_STRUCTURE,IF,if (HeapOverflowSanityCheck(count,quantum) != MagickFalse))<SUB>6</SUB>>];
fixed_15 [label=<(&lt;operator&gt;.notEquals,HeapOverflowSanityCheck(count,quantum) != Magic...)<SUB>6</SUB>>];
fixed_16 [label=<(HeapOverflowSanityCheck,HeapOverflowSanityCheck(count,quantum))<SUB>6</SUB>>];
fixed_17 [label=<(IDENTIFIER,count,HeapOverflowSanityCheck(count,quantum))<SUB>6</SUB>>];
fixed_18 [label=<(IDENTIFIER,quantum,HeapOverflowSanityCheck(count,quantum))<SUB>6</SUB>>];
fixed_19 [label=<(IDENTIFIER,MagickFalse,HeapOverflowSanityCheck(count,quantum) != Magic...)<SUB>6</SUB>>];
fixed_20 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>];
fixed_21 [label=<(RETURN,return((void *) NULL);,return((void *) NULL);)<SUB>7</SUB>>];
fixed_22 [label=<(&lt;operator&gt;.cast,(void *) NULL)<SUB>7</SUB>>];
fixed_23 [label=<(UNKNOWN,void *,void *)<SUB>7</SUB>>];
fixed_24 [label=<(IDENTIFIER,NULL,(void *) NULL)<SUB>7</SUB>>];
fixed_25 [label=<(&lt;operator&gt;.assignment,extent=count*quantum)<SUB>8</SUB>>];
fixed_26 [label=<(IDENTIFIER,extent,extent=count*quantum)<SUB>8</SUB>>];
fixed_27 [label=<(&lt;operator&gt;.multiplication,count*quantum)<SUB>8</SUB>>];
fixed_28 [label=<(IDENTIFIER,count,count*quantum)<SUB>8</SUB>>];
fixed_29 [label=<(IDENTIFIER,quantum,count*quantum)<SUB>8</SUB>>];
fixed_30 [label=<(RETURN,return(AcquireMagickMemory(extent));,return(AcquireMagickMemory(extent));)<SUB>9</SUB>>];
fixed_31 [label=<(AcquireMagickMemory,AcquireMagickMemory(extent))<SUB>9</SUB>>];
fixed_32 [label=<(IDENTIFIER,extent,AcquireMagickMemory(extent))<SUB>9</SUB>>];
fixed_33 [label=<(METHOD_RETURN,void*)<SUB>1</SUB>>];
fixed_35 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_57 [label=<(METHOD,HeapOverflowSanityCheck)>];
fixed_58 [label=<(PARAM,p1)>];
fixed_59 [label=<(PARAM,p2)>];
fixed_60 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_61 [label=<(METHOD_RETURN,ANY)>];
fixed_67 [label=<(METHOD,&lt;operator&gt;.assignment)>];
fixed_68 [label=<(PARAM,p1)>];
fixed_69 [label=<(PARAM,p2)>];
fixed_70 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_71 [label=<(METHOD_RETURN,ANY)>];
fixed_62 [label=<(METHOD,&lt;operator&gt;.cast)>];
fixed_63 [label=<(PARAM,p1)>];
fixed_64 [label=<(PARAM,p2)>];
fixed_65 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_66 [label=<(METHOD_RETURN,ANY)>];
fixed_52 [label=<(METHOD,&lt;operator&gt;.notEquals)>];
fixed_53 [label=<(PARAM,p1)>];
fixed_54 [label=<(PARAM,p2)>];
fixed_55 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_56 [label=<(METHOD_RETURN,ANY)>];
fixed_46 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_47 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_48 [label=<(METHOD_RETURN,ANY)>];
fixed_77 [label=<(METHOD,AcquireMagickMemory)>];
fixed_78 [label=<(PARAM,p1)>];
fixed_79 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_80 [label=<(METHOD_RETURN,ANY)>];
vulnerable_72 -> vulnerable_73  [key=0, label="AST: "];
vulnerable_72 -> vulnerable_73  [key=1, label="DDG: "];
vulnerable_72 -> vulnerable_75  [key=0, label="AST: "];
vulnerable_72 -> vulnerable_74  [key=0, label="AST: "];
vulnerable_72 -> vulnerable_74  [key=1, label="DDG: "];
vulnerable_72 -> vulnerable_76  [key=0, label="AST: "];
vulnerable_72 -> vulnerable_76  [key=1, label="CFG: "];
vulnerable_73 -> vulnerable_76  [key=0, label="DDG: p1"];
vulnerable_74 -> vulnerable_76  [key=0, label="DDG: p2"];
vulnerable_75 -> fixed_72  [key=0];
vulnerable_76 -> fixed_72  [key=0];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_35  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_8  [key=0, label="CFG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_35  [key=0, label="CFG: "];
vulnerable_9 -> vulnerable_10  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_10  [key=1, label="DDG: "];
vulnerable_9 -> vulnerable_11  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_11  [key=1, label="DDG: "];
vulnerable_9 -> vulnerable_12  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_33  [key=0, label="AST: "];
vulnerable_9 -> vulnerable_16  [key=0, label="CFG: "];
vulnerable_9 -> vulnerable_16  [key=1, label="DDG: "];
vulnerable_9 -> vulnerable_15  [key=0, label="DDG: "];
vulnerable_9 -> vulnerable_27  [key=0, label="DDG: "];
vulnerable_9 -> vulnerable_31  [key=0, label="DDG: "];
vulnerable_9 -> vulnerable_22  [key=0, label="DDG: "];
vulnerable_10 -> vulnerable_16  [key=0, label="DDG: count"];
vulnerable_11 -> vulnerable_16  [key=0, label="DDG: quantum"];
vulnerable_12 -> vulnerable_13  [key=0, label="AST: "];
vulnerable_12 -> vulnerable_14  [key=0, label="AST: "];
vulnerable_12 -> vulnerable_25  [key=0, label="AST: "];
vulnerable_12 -> vulnerable_30  [key=0, label="AST: "];
vulnerable_13 -> fixed_72  [key=0];
vulnerable_14 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_20  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_19  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_23  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_23  [key=1, label="CDG: "];
vulnerable_15 -> vulnerable_27  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_27  [key=1, label="CDG: "];
vulnerable_15 -> vulnerable_33  [key=0, label="DDG: CheckMemoryOverflow(count,quantum)"];
vulnerable_15 -> vulnerable_33  [key=1, label="DDG: CheckMemoryOverflow(count,quantum) != MagickFalse"];
vulnerable_15 -> vulnerable_33  [key=2, label="DDG: MagickFalse"];
vulnerable_15 -> vulnerable_30  [key=0, label="CDG: "];
vulnerable_15 -> vulnerable_21  [key=0, label="CDG: "];
vulnerable_15 -> vulnerable_25  [key=0, label="CDG: "];
vulnerable_15 -> vulnerable_22  [key=0, label="CDG: "];
vulnerable_15 -> vulnerable_31  [key=0, label="CDG: "];
vulnerable_16 -> vulnerable_17  [key=0, label="AST: "];
vulnerable_16 -> vulnerable_18  [key=0, label="AST: "];
vulnerable_16 -> vulnerable_15  [key=0, label="CFG: "];
vulnerable_16 -> vulnerable_15  [key=1, label="DDG: count"];
vulnerable_16 -> vulnerable_15  [key=2, label="DDG: quantum"];
vulnerable_16 -> vulnerable_33  [key=0, label="DDG: count"];
vulnerable_16 -> vulnerable_33  [key=1, label="DDG: quantum"];
vulnerable_16 -> vulnerable_27  [key=0, label="DDG: count"];
vulnerable_16 -> vulnerable_27  [key=1, label="DDG: quantum"];
vulnerable_17 -> fixed_72  [key=0];
vulnerable_18 -> fixed_72  [key=0];
vulnerable_19 -> fixed_72  [key=0];
vulnerable_20 -> vulnerable_21  [key=0, label="AST: "];
vulnerable_21 -> vulnerable_22  [key=0, label="AST: "];
vulnerable_21 -> vulnerable_33  [key=0, label="CFG: "];
vulnerable_21 -> vulnerable_33  [key=1, label="DDG: &lt;RET&gt;"];
vulnerable_22 -> vulnerable_23  [key=0, label="AST: "];
vulnerable_22 -> vulnerable_24  [key=0, label="AST: "];
vulnerable_22 -> vulnerable_21  [key=0, label="CFG: "];
vulnerable_22 -> vulnerable_21  [key=1, label="DDG: (void *) NULL"];
vulnerable_22 -> vulnerable_33  [key=0, label="DDG: NULL"];
vulnerable_22 -> vulnerable_33  [key=1, label="DDG: (void *) NULL"];
vulnerable_23 -> vulnerable_22  [key=0, label="CFG: "];
vulnerable_24 -> fixed_72  [key=0];
vulnerable_25 -> vulnerable_26  [key=0, label="AST: "];
vulnerable_25 -> vulnerable_27  [key=0, label="AST: "];
vulnerable_25 -> vulnerable_31  [key=0, label="CFG: "];
vulnerable_25 -> vulnerable_31  [key=1, label="DDG: extent"];
vulnerable_26 -> fixed_72  [key=0];
vulnerable_27 -> vulnerable_28  [key=0, label="AST: "];
vulnerable_27 -> vulnerable_29  [key=0, label="AST: "];
vulnerable_27 -> vulnerable_25  [key=0, label="CFG: "];
vulnerable_27 -> vulnerable_25  [key=1, label="DDG: count"];
vulnerable_27 -> vulnerable_25  [key=2, label="DDG: quantum"];
vulnerable_28 -> fixed_72  [key=0];
vulnerable_29 -> fixed_72  [key=0];
vulnerable_30 -> vulnerable_31  [key=0, label="AST: "];
vulnerable_30 -> vulnerable_33  [key=0, label="CFG: "];
vulnerable_30 -> vulnerable_33  [key=1, label="DDG: &lt;RET&gt;"];
vulnerable_31 -> vulnerable_32  [key=0, label="AST: "];
vulnerable_31 -> vulnerable_30  [key=0, label="CFG: "];
vulnerable_31 -> vulnerable_30  [key=1, label="DDG: AcquireMagickMemory(extent)"];
vulnerable_32 -> fixed_72  [key=0];
vulnerable_33 -> fixed_72  [key=0];
vulnerable_35 -> fixed_72  [key=0];
vulnerable_57 -> vulnerable_58  [key=0, label="AST: "];
vulnerable_57 -> vulnerable_58  [key=1, label="DDG: "];
vulnerable_57 -> vulnerable_60  [key=0, label="AST: "];
vulnerable_57 -> vulnerable_59  [key=0, label="AST: "];
vulnerable_57 -> vulnerable_59  [key=1, label="DDG: "];
vulnerable_57 -> vulnerable_61  [key=0, label="AST: "];
vulnerable_57 -> vulnerable_61  [key=1, label="CFG: "];
vulnerable_58 -> vulnerable_61  [key=0, label="DDG: p1"];
vulnerable_59 -> vulnerable_61  [key=0, label="DDG: p2"];
vulnerable_60 -> fixed_72  [key=0];
vulnerable_61 -> fixed_72  [key=0];
vulnerable_67 -> vulnerable_68  [key=0, label="AST: "];
vulnerable_67 -> vulnerable_68  [key=1, label="DDG: "];
vulnerable_67 -> vulnerable_70  [key=0, label="AST: "];
vulnerable_67 -> vulnerable_69  [key=0, label="AST: "];
vulnerable_67 -> vulnerable_69  [key=1, label="DDG: "];
vulnerable_67 -> vulnerable_71  [key=0, label="AST: "];
vulnerable_67 -> vulnerable_71  [key=1, label="CFG: "];
vulnerable_68 -> vulnerable_71  [key=0, label="DDG: p1"];
vulnerable_69 -> vulnerable_71  [key=0, label="DDG: p2"];
vulnerable_70 -> fixed_72  [key=0];
vulnerable_71 -> fixed_72  [key=0];
vulnerable_62 -> vulnerable_63  [key=0, label="AST: "];
vulnerable_62 -> vulnerable_63  [key=1, label="DDG: "];
vulnerable_62 -> vulnerable_65  [key=0, label="AST: "];
vulnerable_62 -> vulnerable_64  [key=0, label="AST: "];
vulnerable_62 -> vulnerable_64  [key=1, label="DDG: "];
vulnerable_62 -> vulnerable_66  [key=0, label="AST: "];
vulnerable_62 -> vulnerable_66  [key=1, label="CFG: "];
vulnerable_63 -> vulnerable_66  [key=0, label="DDG: p1"];
vulnerable_64 -> vulnerable_66  [key=0, label="DDG: p2"];
vulnerable_65 -> fixed_72  [key=0];
vulnerable_66 -> fixed_72  [key=0];
vulnerable_52 -> vulnerable_53  [key=0, label="AST: "];
vulnerable_52 -> vulnerable_53  [key=1, label="DDG: "];
vulnerable_52 -> vulnerable_55  [key=0, label="AST: "];
vulnerable_52 -> vulnerable_54  [key=0, label="AST: "];
vulnerable_52 -> vulnerable_54  [key=1, label="DDG: "];
vulnerable_52 -> vulnerable_56  [key=0, label="AST: "];
vulnerable_52 -> vulnerable_56  [key=1, label="CFG: "];
vulnerable_53 -> vulnerable_56  [key=0, label="DDG: p1"];
vulnerable_54 -> vulnerable_56  [key=0, label="DDG: p2"];
vulnerable_55 -> fixed_72  [key=0];
vulnerable_56 -> fixed_72  [key=0];
vulnerable_46 -> vulnerable_47  [key=0, label="AST: "];
vulnerable_46 -> vulnerable_48  [key=0, label="AST: "];
vulnerable_46 -> vulnerable_48  [key=1, label="CFG: "];
vulnerable_47 -> fixed_72  [key=0];
vulnerable_48 -> fixed_72  [key=0];
vulnerable_77 -> vulnerable_78  [key=0, label="AST: "];
vulnerable_77 -> vulnerable_78  [key=1, label="DDG: "];
vulnerable_77 -> vulnerable_79  [key=0, label="AST: "];
vulnerable_77 -> vulnerable_80  [key=0, label="AST: "];
vulnerable_77 -> vulnerable_80  [key=1, label="CFG: "];
vulnerable_78 -> vulnerable_80  [key=0, label="DDG: p1"];
vulnerable_79 -> fixed_72  [key=0];
vulnerable_80 -> fixed_72  [key=0];
fixed_72 -> fixed_73  [key=0, label="AST: "];
fixed_72 -> fixed_73  [key=1, label="DDG: "];
fixed_72 -> fixed_75  [key=0, label="AST: "];
fixed_72 -> fixed_74  [key=0, label="AST: "];
fixed_72 -> fixed_74  [key=1, label="DDG: "];
fixed_72 -> fixed_76  [key=0, label="AST: "];
fixed_72 -> fixed_76  [key=1, label="CFG: "];
fixed_73 -> fixed_76  [key=0, label="DDG: p1"];
fixed_74 -> fixed_76  [key=0, label="DDG: p2"];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_35  [key=0, label="AST: "];
fixed_6 -> fixed_8  [key=0, label="CFG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_7 -> fixed_9  [key=0, label="AST: "];
fixed_8 -> fixed_35  [key=0, label="CFG: "];
fixed_9 -> fixed_10  [key=0, label="AST: "];
fixed_9 -> fixed_10  [key=1, label="DDG: "];
fixed_9 -> fixed_11  [key=0, label="AST: "];
fixed_9 -> fixed_11  [key=1, label="DDG: "];
fixed_9 -> fixed_12  [key=0, label="AST: "];
fixed_9 -> fixed_33  [key=0, label="AST: "];
fixed_9 -> fixed_16  [key=0, label="CFG: "];
fixed_9 -> fixed_16  [key=1, label="DDG: "];
fixed_9 -> fixed_15  [key=0, label="DDG: "];
fixed_9 -> fixed_27  [key=0, label="DDG: "];
fixed_9 -> fixed_31  [key=0, label="DDG: "];
fixed_9 -> fixed_22  [key=0, label="DDG: "];
fixed_10 -> fixed_16  [key=0, label="DDG: count"];
fixed_11 -> fixed_16  [key=0, label="DDG: quantum"];
fixed_12 -> fixed_13  [key=0, label="AST: "];
fixed_12 -> fixed_14  [key=0, label="AST: "];
fixed_12 -> fixed_25  [key=0, label="AST: "];
fixed_12 -> fixed_30  [key=0, label="AST: "];
fixed_14 -> fixed_15  [key=0, label="AST: "];
fixed_14 -> fixed_20  [key=0, label="AST: "];
fixed_15 -> fixed_16  [key=0, label="AST: "];
fixed_15 -> fixed_19  [key=0, label="AST: "];
fixed_15 -> fixed_23  [key=0, label="CFG: "];
fixed_15 -> fixed_23  [key=1, label="CDG: "];
fixed_15 -> fixed_27  [key=0, label="CFG: "];
fixed_15 -> fixed_27  [key=1, label="CDG: "];
fixed_15 -> fixed_33  [key=0, label="DDG: HeapOverflowSanityCheck(count,quantum)"];
fixed_15 -> fixed_33  [key=1, label="DDG: HeapOverflowSanityCheck(count,quantum) != MagickFalse"];
fixed_15 -> fixed_33  [key=2, label="DDG: MagickFalse"];
fixed_15 -> fixed_30  [key=0, label="CDG: "];
fixed_15 -> fixed_21  [key=0, label="CDG: "];
fixed_15 -> fixed_25  [key=0, label="CDG: "];
fixed_15 -> fixed_22  [key=0, label="CDG: "];
fixed_15 -> fixed_31  [key=0, label="CDG: "];
fixed_16 -> fixed_17  [key=0, label="AST: "];
fixed_16 -> fixed_18  [key=0, label="AST: "];
fixed_16 -> fixed_15  [key=0, label="CFG: "];
fixed_16 -> fixed_15  [key=1, label="DDG: count"];
fixed_16 -> fixed_15  [key=2, label="DDG: quantum"];
fixed_16 -> fixed_33  [key=0, label="DDG: count"];
fixed_16 -> fixed_33  [key=1, label="DDG: quantum"];
fixed_16 -> fixed_27  [key=0, label="DDG: count"];
fixed_16 -> fixed_27  [key=1, label="DDG: quantum"];
fixed_20 -> fixed_21  [key=0, label="AST: "];
fixed_21 -> fixed_22  [key=0, label="AST: "];
fixed_21 -> fixed_33  [key=0, label="CFG: "];
fixed_21 -> fixed_33  [key=1, label="DDG: &lt;RET&gt;"];
fixed_22 -> fixed_23  [key=0, label="AST: "];
fixed_22 -> fixed_24  [key=0, label="AST: "];
fixed_22 -> fixed_21  [key=0, label="CFG: "];
fixed_22 -> fixed_21  [key=1, label="DDG: (void *) NULL"];
fixed_22 -> fixed_33  [key=0, label="DDG: NULL"];
fixed_22 -> fixed_33  [key=1, label="DDG: (void *) NULL"];
fixed_23 -> fixed_22  [key=0, label="CFG: "];
fixed_25 -> fixed_26  [key=0, label="AST: "];
fixed_25 -> fixed_27  [key=0, label="AST: "];
fixed_25 -> fixed_31  [key=0, label="CFG: "];
fixed_25 -> fixed_31  [key=1, label="DDG: extent"];
fixed_27 -> fixed_28  [key=0, label="AST: "];
fixed_27 -> fixed_29  [key=0, label="AST: "];
fixed_27 -> fixed_25  [key=0, label="CFG: "];
fixed_27 -> fixed_25  [key=1, label="DDG: count"];
fixed_27 -> fixed_25  [key=2, label="DDG: quantum"];
fixed_30 -> fixed_31  [key=0, label="AST: "];
fixed_30 -> fixed_33  [key=0, label="CFG: "];
fixed_30 -> fixed_33  [key=1, label="DDG: &lt;RET&gt;"];
fixed_31 -> fixed_32  [key=0, label="AST: "];
fixed_31 -> fixed_30  [key=0, label="CFG: "];
fixed_31 -> fixed_30  [key=1, label="DDG: AcquireMagickMemory(extent)"];
fixed_57 -> fixed_58  [key=0, label="AST: "];
fixed_57 -> fixed_58  [key=1, label="DDG: "];
fixed_57 -> fixed_60  [key=0, label="AST: "];
fixed_57 -> fixed_59  [key=0, label="AST: "];
fixed_57 -> fixed_59  [key=1, label="DDG: "];
fixed_57 -> fixed_61  [key=0, label="AST: "];
fixed_57 -> fixed_61  [key=1, label="CFG: "];
fixed_58 -> fixed_61  [key=0, label="DDG: p1"];
fixed_59 -> fixed_61  [key=0, label="DDG: p2"];
fixed_67 -> fixed_68  [key=0, label="AST: "];
fixed_67 -> fixed_68  [key=1, label="DDG: "];
fixed_67 -> fixed_70  [key=0, label="AST: "];
fixed_67 -> fixed_69  [key=0, label="AST: "];
fixed_67 -> fixed_69  [key=1, label="DDG: "];
fixed_67 -> fixed_71  [key=0, label="AST: "];
fixed_67 -> fixed_71  [key=1, label="CFG: "];
fixed_68 -> fixed_71  [key=0, label="DDG: p1"];
fixed_69 -> fixed_71  [key=0, label="DDG: p2"];
fixed_62 -> fixed_63  [key=0, label="AST: "];
fixed_62 -> fixed_63  [key=1, label="DDG: "];
fixed_62 -> fixed_65  [key=0, label="AST: "];
fixed_62 -> fixed_64  [key=0, label="AST: "];
fixed_62 -> fixed_64  [key=1, label="DDG: "];
fixed_62 -> fixed_66  [key=0, label="AST: "];
fixed_62 -> fixed_66  [key=1, label="CFG: "];
fixed_63 -> fixed_66  [key=0, label="DDG: p1"];
fixed_64 -> fixed_66  [key=0, label="DDG: p2"];
fixed_52 -> fixed_53  [key=0, label="AST: "];
fixed_52 -> fixed_53  [key=1, label="DDG: "];
fixed_52 -> fixed_55  [key=0, label="AST: "];
fixed_52 -> fixed_54  [key=0, label="AST: "];
fixed_52 -> fixed_54  [key=1, label="DDG: "];
fixed_52 -> fixed_56  [key=0, label="AST: "];
fixed_52 -> fixed_56  [key=1, label="CFG: "];
fixed_53 -> fixed_56  [key=0, label="DDG: p1"];
fixed_54 -> fixed_56  [key=0, label="DDG: p2"];
fixed_46 -> fixed_47  [key=0, label="AST: "];
fixed_46 -> fixed_48  [key=0, label="AST: "];
fixed_46 -> fixed_48  [key=1, label="CFG: "];
fixed_77 -> fixed_78  [key=0, label="AST: "];
fixed_77 -> fixed_78  [key=1, label="DDG: "];
fixed_77 -> fixed_79  [key=0, label="AST: "];
fixed_77 -> fixed_80  [key=0, label="AST: "];
fixed_77 -> fixed_80  [key=1, label="CFG: "];
fixed_78 -> fixed_80  [key=0, label="DDG: p1"];
}
