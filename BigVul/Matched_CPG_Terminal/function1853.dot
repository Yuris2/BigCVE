digraph "&lt;operator&gt;.assignment" {
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(UNKNOWN,PHP_FUNCTION(imageaffinematrixget)
{
	double af...,PHP_FUNCTION(imageaffinematrixget)
{
	double af...)<SUB>1</SUB>>];
vulnerable_9 [label="<(LOCAL,long type: long)<SUB>4</SUB>>"];
vulnerable_10 [label="<(LOCAL,zval* options: zval*)<SUB>5</SUB>>"];
vulnerable_11 [label="<(LOCAL,zval** tmp: zval**)<SUB>6</SUB>>"];
vulnerable_12 [label="<(LOCAL,int res: int)<SUB>7</SUB>>"];
vulnerable_13 [label="<(LOCAL,int i: int)<SUB>7</SUB>>"];
vulnerable_14 [label=<(&lt;operator&gt;.assignment,res = GD_FALSE)<SUB>7</SUB>>];
vulnerable_15 [label=<(IDENTIFIER,res,res = GD_FALSE)<SUB>7</SUB>>];
vulnerable_16 [label=<(IDENTIFIER,GD_FALSE,res = GD_FALSE)<SUB>7</SUB>>];
vulnerable_17 [label=<(UNKNOWN,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...)<SUB>9</SUB>>];
vulnerable_18 [label=<(UNKNOWN,switch((gdAffineStandardMatrix)type) {
		case G...,switch((gdAffineStandardMatrix)type) {
		case G...)<SUB>13</SUB>>];
vulnerable_19 [label=<(UNKNOWN,if (res == GD_FALSE) {
		RETURN_FALSE;
	},if (res == GD_FALSE) {
		RETURN_FALSE;
	})<SUB>67</SUB>>];
vulnerable_20 [label=<(UNKNOWN,else {
		array_init(return_value);
		for (i = 0...,else {
		array_init(return_value);
		for (i = 0...)<SUB>69</SUB>>];
vulnerable_21 [label=<(UNKNOWN,},})<SUB>75</SUB>>];
vulnerable_22 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_35 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_36 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_37 [label=<(METHOD_RETURN,ANY)>];
vulnerable_41 [label=<(METHOD,&lt;operator&gt;.assignment)>];
vulnerable_42 [label=<(PARAM,p1)>];
vulnerable_43 [label=<(PARAM,p2)>];
vulnerable_44 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_45 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(UNKNOWN,PHP_FUNCTION(imageaffinematrixget)
{
	double af...,PHP_FUNCTION(imageaffinematrixget)
{
	double af...)<SUB>1</SUB>>];
fixed_9 [label="<(LOCAL,long type: long)<SUB>4</SUB>>"];
fixed_10 [label="<(LOCAL,zval* options: zval*)<SUB>5</SUB>>"];
fixed_11 [label="<(LOCAL,zval** tmp: zval**)<SUB>6</SUB>>"];
fixed_12 [label="<(LOCAL,int res: int)<SUB>7</SUB>>"];
fixed_13 [label="<(LOCAL,int i: int)<SUB>7</SUB>>"];
fixed_14 [label=<(&lt;operator&gt;.assignment,res = GD_FALSE)<SUB>7</SUB>>];
fixed_15 [label=<(IDENTIFIER,res,res = GD_FALSE)<SUB>7</SUB>>];
fixed_16 [label=<(IDENTIFIER,GD_FALSE,res = GD_FALSE)<SUB>7</SUB>>];
fixed_17 [label=<(UNKNOWN,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...,if (zend_parse_parameters(ZEND_NUM_ARGS() TSRML...)<SUB>9</SUB>>];
fixed_18 [label=<(UNKNOWN,switch((gdAffineStandardMatrix)type) {
		case G...,switch((gdAffineStandardMatrix)type) {
		case G...)<SUB>13</SUB>>];
fixed_19 [label=<(UNKNOWN,if (res == GD_FALSE) {
		RETURN_FALSE;
	},if (res == GD_FALSE) {
		RETURN_FALSE;
	})<SUB>81</SUB>>];
fixed_20 [label=<(UNKNOWN,else {
		array_init(return_value);
		for (i = 0...,else {
		array_init(return_value);
		for (i = 0...)<SUB>83</SUB>>];
fixed_21 [label=<(UNKNOWN,},})<SUB>89</SUB>>];
fixed_22 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_35 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_36 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_37 [label=<(METHOD_RETURN,ANY)>];
fixed_41 [label=<(METHOD,&lt;operator&gt;.assignment)>];
fixed_42 [label=<(PARAM,p1)>];
fixed_43 [label=<(PARAM,p2)>];
fixed_44 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_45 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_22  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_8  [key=0, label="CFG: "];
vulnerable_6 -> vulnerable_14  [key=0, label="DDG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_10  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_11  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_12  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_13  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_14  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_17  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_18  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_19  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_20  [key=0, label="AST: "];
vulnerable_7 -> vulnerable_21  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_14  [key=0, label="CFG: "];
vulnerable_9 -> fixed_6  [key=0];
vulnerable_10 -> fixed_6  [key=0];
vulnerable_11 -> fixed_6  [key=0];
vulnerable_12 -> fixed_6  [key=0];
vulnerable_13 -> fixed_6  [key=0];
vulnerable_14 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_17  [key=0, label="CFG: "];
vulnerable_14 -> vulnerable_22  [key=0, label="DDG: res"];
vulnerable_14 -> vulnerable_22  [key=1, label="DDG: res = GD_FALSE"];
vulnerable_14 -> vulnerable_22  [key=2, label="DDG: GD_FALSE"];
vulnerable_15 -> fixed_6  [key=0];
vulnerable_16 -> fixed_6  [key=0];
vulnerable_17 -> vulnerable_18  [key=0, label="CFG: "];
vulnerable_18 -> vulnerable_19  [key=0, label="CFG: "];
vulnerable_19 -> vulnerable_20  [key=0, label="CFG: "];
vulnerable_20 -> vulnerable_21  [key=0, label="CFG: "];
vulnerable_21 -> vulnerable_22  [key=0, label="CFG: "];
vulnerable_22 -> fixed_6  [key=0];
vulnerable_35 -> vulnerable_36  [key=0, label="AST: "];
vulnerable_35 -> vulnerable_37  [key=0, label="AST: "];
vulnerable_35 -> vulnerable_37  [key=1, label="CFG: "];
vulnerable_36 -> fixed_6  [key=0];
vulnerable_37 -> fixed_6  [key=0];
vulnerable_41 -> vulnerable_42  [key=0, label="AST: "];
vulnerable_41 -> vulnerable_42  [key=1, label="DDG: "];
vulnerable_41 -> vulnerable_44  [key=0, label="AST: "];
vulnerable_41 -> vulnerable_43  [key=0, label="AST: "];
vulnerable_41 -> vulnerable_43  [key=1, label="DDG: "];
vulnerable_41 -> vulnerable_45  [key=0, label="AST: "];
vulnerable_41 -> vulnerable_45  [key=1, label="CFG: "];
vulnerable_42 -> vulnerable_45  [key=0, label="DDG: p1"];
vulnerable_43 -> vulnerable_45  [key=0, label="DDG: p2"];
vulnerable_44 -> fixed_6  [key=0];
vulnerable_45 -> fixed_6  [key=0];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_22  [key=0, label="AST: "];
fixed_6 -> fixed_8  [key=0, label="CFG: "];
fixed_6 -> fixed_14  [key=0, label="DDG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_7 -> fixed_9  [key=0, label="AST: "];
fixed_7 -> fixed_10  [key=0, label="AST: "];
fixed_7 -> fixed_11  [key=0, label="AST: "];
fixed_7 -> fixed_12  [key=0, label="AST: "];
fixed_7 -> fixed_13  [key=0, label="AST: "];
fixed_7 -> fixed_14  [key=0, label="AST: "];
fixed_7 -> fixed_17  [key=0, label="AST: "];
fixed_7 -> fixed_18  [key=0, label="AST: "];
fixed_7 -> fixed_19  [key=0, label="AST: "];
fixed_7 -> fixed_20  [key=0, label="AST: "];
fixed_7 -> fixed_21  [key=0, label="AST: "];
fixed_8 -> fixed_14  [key=0, label="CFG: "];
fixed_14 -> fixed_15  [key=0, label="AST: "];
fixed_14 -> fixed_16  [key=0, label="AST: "];
fixed_14 -> fixed_17  [key=0, label="CFG: "];
fixed_14 -> fixed_22  [key=0, label="DDG: res"];
fixed_14 -> fixed_22  [key=1, label="DDG: res = GD_FALSE"];
fixed_14 -> fixed_22  [key=2, label="DDG: GD_FALSE"];
fixed_17 -> fixed_18  [key=0, label="CFG: "];
fixed_18 -> fixed_19  [key=0, label="CFG: "];
fixed_19 -> fixed_20  [key=0, label="CFG: "];
fixed_20 -> fixed_21  [key=0, label="CFG: "];
fixed_21 -> fixed_22  [key=0, label="CFG: "];
fixed_35 -> fixed_36  [key=0, label="AST: "];
fixed_35 -> fixed_37  [key=0, label="AST: "];
fixed_35 -> fixed_37  [key=1, label="CFG: "];
fixed_41 -> fixed_42  [key=0, label="AST: "];
fixed_41 -> fixed_42  [key=1, label="DDG: "];
fixed_41 -> fixed_44  [key=0, label="AST: "];
fixed_41 -> fixed_43  [key=0, label="AST: "];
fixed_41 -> fixed_43  [key=1, label="DDG: "];
fixed_41 -> fixed_45  [key=0, label="AST: "];
fixed_41 -> fixed_45  [key=1, label="CFG: "];
fixed_42 -> fixed_45  [key=0, label="DDG: p1"];
fixed_43 -> fixed_45  [key=0, label="DDG: p2"];
}
