digraph "&lt;global&gt;" {
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(UNKNOWN,parse_cosine_hex_dump(FILE_T fh, struct wtap_pk...,parse_cosine_hex_dump(FILE_T fh, struct wtap_pk...)<SUB>1</SUB>>];
vulnerable_9 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_14 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_15 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_16 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(UNKNOWN,parse_cosine_hex_dump(FILE_T fh, struct wtap_pk...,parse_cosine_hex_dump(FILE_T fh, struct wtap_pk...)<SUB>1</SUB>>];
fixed_9 [label=<(UNKNOWN,pd = ws_buffer_start_ptr(buf);,pd = ws_buffer_start_ptr(buf);)<SUB>4</SUB>>];
fixed_10 [label=<(UNKNOWN,hex_lines = pkt_len / 16 + ((pkt_len % 16) ? 1 ...,hex_lines = pkt_len / 16 + ((pkt_len % 16) ? 1 ...)<SUB>8</SUB>>];
fixed_11 [label=<(UNKNOWN,for (i = 0;,for (i = 0;)<SUB>10</SUB>>];
fixed_12 [label=<(UNKNOWN,i &lt; hex_lines;,i &lt; hex_lines;)<SUB>10</SUB>>];
fixed_13 [label=<(UNKNOWN,i++) {
		if (file_gets(line, COSINE_LINE_LENGTH...,i++) {
		if (file_gets(line, COSINE_LINE_LENGTH...)<SUB>10</SUB>>];
fixed_14 [label=<(UNKNOWN,phdr-&gt;caplen = caplen;,phdr-&gt;caplen = caplen;)<SUB>28</SUB>>];
fixed_15 [label=<(UNKNOWN,return TRUE;,return TRUE;)<SUB>29</SUB>>];
fixed_16 [label=<(UNKNOWN,},})<SUB>30</SUB>>];
fixed_17 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_22 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_23 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_24 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_8  [key=0, label="CFG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_9  [key=0, label="CFG: "];
vulnerable_9 -> fixed_6  [key=0];
vulnerable_14 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_14 -> vulnerable_16  [key=1, label="CFG: "];
vulnerable_15 -> fixed_6  [key=0];
vulnerable_16 -> fixed_6  [key=0];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_17  [key=0, label="AST: "];
fixed_6 -> fixed_8  [key=0, label="CFG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_7 -> fixed_9  [key=0, label="AST: "];
fixed_7 -> fixed_10  [key=0, label="AST: "];
fixed_7 -> fixed_11  [key=0, label="AST: "];
fixed_7 -> fixed_12  [key=0, label="AST: "];
fixed_7 -> fixed_13  [key=0, label="AST: "];
fixed_7 -> fixed_14  [key=0, label="AST: "];
fixed_7 -> fixed_15  [key=0, label="AST: "];
fixed_7 -> fixed_16  [key=0, label="AST: "];
fixed_8 -> fixed_9  [key=0, label="CFG: "];
fixed_9 -> fixed_10  [key=0, label="CFG: "];
fixed_10 -> fixed_11  [key=0, label="CFG: "];
fixed_11 -> fixed_12  [key=0, label="CFG: "];
fixed_12 -> fixed_13  [key=0, label="CFG: "];
fixed_13 -> fixed_14  [key=0, label="CFG: "];
fixed_14 -> fixed_15  [key=0, label="CFG: "];
fixed_15 -> fixed_16  [key=0, label="CFG: "];
fixed_16 -> fixed_17  [key=0, label="CFG: "];
fixed_22 -> fixed_23  [key=0, label="AST: "];
fixed_22 -> fixed_24  [key=0, label="AST: "];
fixed_22 -> fixed_24  [key=1, label="CFG: "];
}
