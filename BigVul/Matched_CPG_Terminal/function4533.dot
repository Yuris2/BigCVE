digraph "&lt;operator&gt;.equals" {
vulnerable_102 [label=<(METHOD,&lt;operator&gt;.equals)>];
vulnerable_103 [label=<(PARAM,p1)>];
vulnerable_104 [label=<(PARAM,p2)>];
vulnerable_105 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_106 [label=<(METHOD_RETURN,ANY)>];
vulnerable_126 [label=<(METHOD,strcmp)>];
vulnerable_127 [label=<(PARAM,p1)>];
vulnerable_128 [label=<(PARAM,p2)>];
vulnerable_129 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_130 [label=<(METHOD_RETURN,ANY)>];
vulnerable_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
vulnerable_8 [label=<(METHOD,test_base64_decode)<SUB>1</SUB>>];
vulnerable_9 [label=<(PARAM,void)<SUB>1</SUB>>];
vulnerable_10 [label=<(BLOCK,{
   char buffer[16];
  int len = mutt_b64_deco...,{
   char buffer[16];
  int len = mutt_b64_deco...)<SUB>2</SUB>>];
vulnerable_11 [label="<(LOCAL,char[16] buffer: char[16])<SUB>3</SUB>>"];
vulnerable_12 [label="<(LOCAL,int len: int)<SUB>4</SUB>>"];
vulnerable_13 [label=<(&lt;operator&gt;.assignment,len = mutt_b64_decode(buffer, encoded))<SUB>4</SUB>>];
vulnerable_14 [label=<(IDENTIFIER,len,len = mutt_b64_decode(buffer, encoded))<SUB>4</SUB>>];
vulnerable_15 [label=<(mutt_b64_decode,mutt_b64_decode(buffer, encoded))<SUB>4</SUB>>];
vulnerable_16 [label=<(IDENTIFIER,buffer,mutt_b64_decode(buffer, encoded))<SUB>4</SUB>>];
vulnerable_17 [label=<(IDENTIFIER,encoded,mutt_b64_decode(buffer, encoded))<SUB>4</SUB>>];
vulnerable_18 [label=<(CONTROL_STRUCTURE,IF,if (!TEST_CHECK(len == sizeof(clear) - 1)))<SUB>5</SUB>>];
vulnerable_19 [label=<(&lt;operator&gt;.logicalNot,!TEST_CHECK(len == sizeof(clear) - 1))<SUB>5</SUB>>];
vulnerable_20 [label=<(TEST_CHECK,TEST_CHECK(len == sizeof(clear) - 1))<SUB>5</SUB>>];
vulnerable_21 [label=<(&lt;operator&gt;.equals,len == sizeof(clear) - 1)<SUB>5</SUB>>];
vulnerable_22 [label=<(IDENTIFIER,len,len == sizeof(clear) - 1)<SUB>5</SUB>>];
vulnerable_23 [label=<(&lt;operator&gt;.subtraction,sizeof(clear) - 1)<SUB>5</SUB>>];
vulnerable_24 [label=<(&lt;operator&gt;.sizeOf,sizeof(clear))<SUB>5</SUB>>];
vulnerable_25 [label=<(IDENTIFIER,clear,sizeof(clear))<SUB>5</SUB>>];
vulnerable_26 [label=<(LITERAL,1,sizeof(clear) - 1)<SUB>5</SUB>>];
vulnerable_27 [label="<(BLOCK,{
     TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) ...,{
     TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) ...)<SUB>6</SUB>>"];
vulnerable_28 [label="<(TEST_MSG,TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) - 1))<SUB>7</SUB>>"];
vulnerable_29 [label="<(LITERAL,&quot;Expected: %zu&quot;,TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) - 1))<SUB>7</SUB>>"];
vulnerable_30 [label=<(&lt;operator&gt;.subtraction,sizeof(clear) - 1)<SUB>7</SUB>>];
vulnerable_31 [label=<(&lt;operator&gt;.sizeOf,sizeof(clear))<SUB>7</SUB>>];
vulnerable_32 [label=<(IDENTIFIER,clear,sizeof(clear))<SUB>7</SUB>>];
vulnerable_33 [label=<(LITERAL,1,sizeof(clear) - 1)<SUB>7</SUB>>];
vulnerable_34 [label="<(TEST_MSG,TEST_MSG(&quot;Actual  : %zu&quot;, len))<SUB>8</SUB>>"];
vulnerable_35 [label="<(LITERAL,&quot;Actual  : %zu&quot;,TEST_MSG(&quot;Actual  : %zu&quot;, len))<SUB>8</SUB>>"];
vulnerable_36 [label="<(IDENTIFIER,len,TEST_MSG(&quot;Actual  : %zu&quot;, len))<SUB>8</SUB>>"];
vulnerable_37 [label=<(&lt;operator&gt;.assignment,buffer[len] = '\0')<SUB>10</SUB>>];
vulnerable_38 [label=<(&lt;operator&gt;.indirectIndexAccess,buffer[len])<SUB>10</SUB>>];
vulnerable_39 [label=<(IDENTIFIER,buffer,buffer[len] = '\0')<SUB>10</SUB>>];
vulnerable_40 [label=<(IDENTIFIER,len,buffer[len] = '\0')<SUB>10</SUB>>];
vulnerable_41 [label=<(LITERAL,'\0',buffer[len] = '\0')<SUB>10</SUB>>];
vulnerable_42 [label=<(CONTROL_STRUCTURE,IF,if (!TEST_CHECK(strcmp(buffer, clear) == 0)))<SUB>11</SUB>>];
vulnerable_43 [label=<(&lt;operator&gt;.logicalNot,!TEST_CHECK(strcmp(buffer, clear) == 0))<SUB>11</SUB>>];
vulnerable_44 [label=<(TEST_CHECK,TEST_CHECK(strcmp(buffer, clear) == 0))<SUB>11</SUB>>];
vulnerable_45 [label=<(&lt;operator&gt;.equals,strcmp(buffer, clear) == 0)<SUB>11</SUB>>];
vulnerable_46 [label=<(strcmp,strcmp(buffer, clear))<SUB>11</SUB>>];
vulnerable_47 [label=<(IDENTIFIER,buffer,strcmp(buffer, clear))<SUB>11</SUB>>];
vulnerable_48 [label=<(IDENTIFIER,clear,strcmp(buffer, clear))<SUB>11</SUB>>];
vulnerable_49 [label=<(LITERAL,0,strcmp(buffer, clear) == 0)<SUB>11</SUB>>];
vulnerable_50 [label="<(BLOCK,{
    TEST_MSG(&quot;Expected: %s&quot;, clear);
    TEST...,{
    TEST_MSG(&quot;Expected: %s&quot;, clear);
    TEST...)<SUB>12</SUB>>"];
vulnerable_51 [label="<(TEST_MSG,TEST_MSG(&quot;Expected: %s&quot;, clear))<SUB>13</SUB>>"];
vulnerable_52 [label="<(LITERAL,&quot;Expected: %s&quot;,TEST_MSG(&quot;Expected: %s&quot;, clear))<SUB>13</SUB>>"];
vulnerable_53 [label="<(IDENTIFIER,clear,TEST_MSG(&quot;Expected: %s&quot;, clear))<SUB>13</SUB>>"];
vulnerable_54 [label="<(TEST_MSG,TEST_MSG(&quot;Actual  : %s&quot;, buffer))<SUB>14</SUB>>"];
vulnerable_55 [label="<(LITERAL,&quot;Actual  : %s&quot;,TEST_MSG(&quot;Actual  : %s&quot;, buffer))<SUB>14</SUB>>"];
vulnerable_56 [label="<(IDENTIFIER,buffer,TEST_MSG(&quot;Actual  : %s&quot;, buffer))<SUB>14</SUB>>"];
vulnerable_57 [label=<(METHOD_RETURN,void)<SUB>1</SUB>>];
vulnerable_59 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
vulnerable_89 [label=<(METHOD,mutt_b64_decode)>];
vulnerable_90 [label=<(PARAM,p1)>];
vulnerable_91 [label=<(PARAM,p2)>];
vulnerable_92 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_93 [label=<(METHOD_RETURN,ANY)>];
vulnerable_121 [label=<(METHOD,&lt;operator&gt;.indirectIndexAccess)>];
vulnerable_122 [label=<(PARAM,p1)>];
vulnerable_123 [label=<(PARAM,p2)>];
vulnerable_124 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_125 [label=<(METHOD_RETURN,ANY)>];
vulnerable_116 [label=<(METHOD,TEST_MSG)>];
vulnerable_117 [label=<(PARAM,p1)>];
vulnerable_118 [label=<(PARAM,p2)>];
vulnerable_119 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_120 [label=<(METHOD_RETURN,ANY)>];
vulnerable_112 [label=<(METHOD,&lt;operator&gt;.sizeOf)>];
vulnerable_113 [label=<(PARAM,p1)>];
vulnerable_114 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_115 [label=<(METHOD_RETURN,ANY)>];
vulnerable_98 [label=<(METHOD,TEST_CHECK)>];
vulnerable_99 [label=<(PARAM,p1)>];
vulnerable_100 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_101 [label=<(METHOD_RETURN,ANY)>];
vulnerable_94 [label=<(METHOD,&lt;operator&gt;.logicalNot)>];
vulnerable_95 [label=<(PARAM,p1)>];
vulnerable_96 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_97 [label=<(METHOD_RETURN,ANY)>];
vulnerable_84 [label=<(METHOD,&lt;operator&gt;.assignment)>];
vulnerable_85 [label=<(PARAM,p1)>];
vulnerable_86 [label=<(PARAM,p2)>];
vulnerable_87 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_88 [label=<(METHOD_RETURN,ANY)>];
vulnerable_78 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
vulnerable_79 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_80 [label=<(METHOD_RETURN,ANY)>];
vulnerable_107 [label=<(METHOD,&lt;operator&gt;.subtraction)>];
vulnerable_108 [label=<(PARAM,p1)>];
vulnerable_109 [label=<(PARAM,p2)>];
vulnerable_110 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
vulnerable_111 [label=<(METHOD_RETURN,ANY)>];
fixed_105 [label=<(METHOD,TEST_CHECK)>];
fixed_106 [label=<(PARAM,p1)>];
fixed_107 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_108 [label=<(METHOD_RETURN,ANY)>];
fixed_129 [label=<(METHOD,strcmp)>];
fixed_130 [label=<(PARAM,p1)>];
fixed_131 [label=<(PARAM,p2)>];
fixed_132 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_133 [label=<(METHOD_RETURN,ANY)>];
fixed_6 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_7 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>];
fixed_8 [label=<(METHOD,test_base64_decode)<SUB>1</SUB>>];
fixed_9 [label=<(PARAM,void)<SUB>1</SUB>>];
fixed_10 [label=<(BLOCK,{
   char buffer[16];
  int len = mutt_b64_deco...,{
   char buffer[16];
  int len = mutt_b64_deco...)<SUB>2</SUB>>];
fixed_11 [label="<(LOCAL,char[16] buffer: char[16])<SUB>3</SUB>>"];
fixed_12 [label="<(LOCAL,int len: int)<SUB>4</SUB>>"];
fixed_13 [label=<(&lt;operator&gt;.assignment,len = mutt_b64_decode(buffer, encoded, sizeof(b...)<SUB>4</SUB>>];
fixed_14 [label=<(IDENTIFIER,len,len = mutt_b64_decode(buffer, encoded, sizeof(b...)<SUB>4</SUB>>];
fixed_15 [label=<(mutt_b64_decode,mutt_b64_decode(buffer, encoded, sizeof(buffer)))<SUB>4</SUB>>];
fixed_16 [label=<(IDENTIFIER,buffer,mutt_b64_decode(buffer, encoded, sizeof(buffer)))<SUB>4</SUB>>];
fixed_17 [label=<(IDENTIFIER,encoded,mutt_b64_decode(buffer, encoded, sizeof(buffer)))<SUB>4</SUB>>];
fixed_18 [label=<(&lt;operator&gt;.sizeOf,sizeof(buffer))<SUB>4</SUB>>];
fixed_19 [label=<(IDENTIFIER,buffer,sizeof(buffer))<SUB>4</SUB>>];
fixed_20 [label=<(CONTROL_STRUCTURE,IF,if (!TEST_CHECK(len == sizeof(clear) - 1)))<SUB>5</SUB>>];
fixed_21 [label=<(&lt;operator&gt;.logicalNot,!TEST_CHECK(len == sizeof(clear) - 1))<SUB>5</SUB>>];
fixed_22 [label=<(TEST_CHECK,TEST_CHECK(len == sizeof(clear) - 1))<SUB>5</SUB>>];
fixed_23 [label=<(&lt;operator&gt;.equals,len == sizeof(clear) - 1)<SUB>5</SUB>>];
fixed_24 [label=<(IDENTIFIER,len,len == sizeof(clear) - 1)<SUB>5</SUB>>];
fixed_25 [label=<(&lt;operator&gt;.subtraction,sizeof(clear) - 1)<SUB>5</SUB>>];
fixed_26 [label=<(&lt;operator&gt;.sizeOf,sizeof(clear))<SUB>5</SUB>>];
fixed_27 [label=<(IDENTIFIER,clear,sizeof(clear))<SUB>5</SUB>>];
fixed_28 [label=<(LITERAL,1,sizeof(clear) - 1)<SUB>5</SUB>>];
fixed_29 [label="<(BLOCK,{
     TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) ...,{
     TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) ...)<SUB>6</SUB>>"];
fixed_30 [label="<(TEST_MSG,TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) - 1))<SUB>7</SUB>>"];
fixed_31 [label="<(LITERAL,&quot;Expected: %zu&quot;,TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) - 1))<SUB>7</SUB>>"];
fixed_32 [label=<(&lt;operator&gt;.subtraction,sizeof(clear) - 1)<SUB>7</SUB>>];
fixed_33 [label=<(&lt;operator&gt;.sizeOf,sizeof(clear))<SUB>7</SUB>>];
fixed_34 [label=<(IDENTIFIER,clear,sizeof(clear))<SUB>7</SUB>>];
fixed_35 [label=<(LITERAL,1,sizeof(clear) - 1)<SUB>7</SUB>>];
fixed_36 [label="<(TEST_MSG,TEST_MSG(&quot;Actual  : %zu&quot;, len))<SUB>8</SUB>>"];
fixed_37 [label="<(LITERAL,&quot;Actual  : %zu&quot;,TEST_MSG(&quot;Actual  : %zu&quot;, len))<SUB>8</SUB>>"];
fixed_38 [label="<(IDENTIFIER,len,TEST_MSG(&quot;Actual  : %zu&quot;, len))<SUB>8</SUB>>"];
fixed_39 [label=<(&lt;operator&gt;.assignment,buffer[len] = '\0')<SUB>10</SUB>>];
fixed_40 [label=<(&lt;operator&gt;.indirectIndexAccess,buffer[len])<SUB>10</SUB>>];
fixed_41 [label=<(IDENTIFIER,buffer,buffer[len] = '\0')<SUB>10</SUB>>];
fixed_42 [label=<(IDENTIFIER,len,buffer[len] = '\0')<SUB>10</SUB>>];
fixed_43 [label=<(LITERAL,'\0',buffer[len] = '\0')<SUB>10</SUB>>];
fixed_44 [label=<(CONTROL_STRUCTURE,IF,if (!TEST_CHECK(strcmp(buffer, clear) == 0)))<SUB>11</SUB>>];
fixed_45 [label=<(&lt;operator&gt;.logicalNot,!TEST_CHECK(strcmp(buffer, clear) == 0))<SUB>11</SUB>>];
fixed_46 [label=<(TEST_CHECK,TEST_CHECK(strcmp(buffer, clear) == 0))<SUB>11</SUB>>];
fixed_47 [label=<(&lt;operator&gt;.equals,strcmp(buffer, clear) == 0)<SUB>11</SUB>>];
fixed_48 [label=<(strcmp,strcmp(buffer, clear))<SUB>11</SUB>>];
fixed_49 [label=<(IDENTIFIER,buffer,strcmp(buffer, clear))<SUB>11</SUB>>];
fixed_50 [label=<(IDENTIFIER,clear,strcmp(buffer, clear))<SUB>11</SUB>>];
fixed_51 [label=<(LITERAL,0,strcmp(buffer, clear) == 0)<SUB>11</SUB>>];
fixed_52 [label="<(BLOCK,{
    TEST_MSG(&quot;Expected: %s&quot;, clear);
    TEST...,{
    TEST_MSG(&quot;Expected: %s&quot;, clear);
    TEST...)<SUB>12</SUB>>"];
fixed_53 [label="<(TEST_MSG,TEST_MSG(&quot;Expected: %s&quot;, clear))<SUB>13</SUB>>"];
fixed_54 [label="<(LITERAL,&quot;Expected: %s&quot;,TEST_MSG(&quot;Expected: %s&quot;, clear))<SUB>13</SUB>>"];
fixed_55 [label="<(IDENTIFIER,clear,TEST_MSG(&quot;Expected: %s&quot;, clear))<SUB>13</SUB>>"];
fixed_56 [label="<(TEST_MSG,TEST_MSG(&quot;Actual  : %s&quot;, buffer))<SUB>14</SUB>>"];
fixed_57 [label="<(LITERAL,&quot;Actual  : %s&quot;,TEST_MSG(&quot;Actual  : %s&quot;, buffer))<SUB>14</SUB>>"];
fixed_58 [label="<(IDENTIFIER,buffer,TEST_MSG(&quot;Actual  : %s&quot;, buffer))<SUB>14</SUB>>"];
fixed_59 [label=<(METHOD_RETURN,void)<SUB>1</SUB>>];
fixed_61 [label=<(METHOD_RETURN,ANY)<SUB>1</SUB>>];
fixed_91 [label=<(METHOD,mutt_b64_decode)>];
fixed_92 [label=<(PARAM,p1)>];
fixed_93 [label=<(PARAM,p2)>];
fixed_94 [label=<(PARAM,p3)>];
fixed_95 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_96 [label=<(METHOD_RETURN,ANY)>];
fixed_124 [label=<(METHOD,&lt;operator&gt;.indirectIndexAccess)>];
fixed_125 [label=<(PARAM,p1)>];
fixed_126 [label=<(PARAM,p2)>];
fixed_127 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_128 [label=<(METHOD_RETURN,ANY)>];
fixed_119 [label=<(METHOD,TEST_MSG)>];
fixed_120 [label=<(PARAM,p1)>];
fixed_121 [label=<(PARAM,p2)>];
fixed_122 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_123 [label=<(METHOD_RETURN,ANY)>];
fixed_114 [label=<(METHOD,&lt;operator&gt;.subtraction)>];
fixed_115 [label=<(PARAM,p1)>];
fixed_116 [label=<(PARAM,p2)>];
fixed_117 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_118 [label=<(METHOD_RETURN,ANY)>];
fixed_101 [label=<(METHOD,&lt;operator&gt;.logicalNot)>];
fixed_102 [label=<(PARAM,p1)>];
fixed_103 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_104 [label=<(METHOD_RETURN,ANY)>];
fixed_97 [label=<(METHOD,&lt;operator&gt;.sizeOf)>];
fixed_98 [label=<(PARAM,p1)>];
fixed_99 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_100 [label=<(METHOD_RETURN,ANY)>];
fixed_86 [label=<(METHOD,&lt;operator&gt;.assignment)>];
fixed_87 [label=<(PARAM,p1)>];
fixed_88 [label=<(PARAM,p2)>];
fixed_89 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_90 [label=<(METHOD_RETURN,ANY)>];
fixed_80 [label=<(METHOD,&lt;global&gt;)<SUB>1</SUB>>];
fixed_81 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_82 [label=<(METHOD_RETURN,ANY)>];
fixed_109 [label=<(METHOD,&lt;operator&gt;.equals)>];
fixed_110 [label=<(PARAM,p1)>];
fixed_111 [label=<(PARAM,p2)>];
fixed_112 [label=<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)>];
fixed_113 [label=<(METHOD_RETURN,ANY)>];
vulnerable_102 -> vulnerable_103  [key=0, label="AST: "];
vulnerable_102 -> vulnerable_103  [key=1, label="DDG: "];
vulnerable_102 -> vulnerable_105  [key=0, label="AST: "];
vulnerable_102 -> vulnerable_104  [key=0, label="AST: "];
vulnerable_102 -> vulnerable_104  [key=1, label="DDG: "];
vulnerable_102 -> vulnerable_106  [key=0, label="AST: "];
vulnerable_102 -> vulnerable_106  [key=1, label="CFG: "];
vulnerable_103 -> vulnerable_106  [key=0, label="DDG: p1"];
vulnerable_104 -> vulnerable_106  [key=0, label="DDG: p2"];
vulnerable_105 -> fixed_105  [key=0];
vulnerable_106 -> fixed_105  [key=0];
vulnerable_126 -> vulnerable_127  [key=0, label="AST: "];
vulnerable_126 -> vulnerable_127  [key=1, label="DDG: "];
vulnerable_126 -> vulnerable_129  [key=0, label="AST: "];
vulnerable_126 -> vulnerable_128  [key=0, label="AST: "];
vulnerable_126 -> vulnerable_128  [key=1, label="DDG: "];
vulnerable_126 -> vulnerable_130  [key=0, label="AST: "];
vulnerable_126 -> vulnerable_130  [key=1, label="CFG: "];
vulnerable_127 -> vulnerable_130  [key=0, label="DDG: p1"];
vulnerable_128 -> vulnerable_130  [key=0, label="DDG: p2"];
vulnerable_129 -> fixed_105  [key=0];
vulnerable_130 -> fixed_105  [key=0];
vulnerable_6 -> vulnerable_7  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_59  [key=0, label="AST: "];
vulnerable_6 -> vulnerable_59  [key=1, label="CFG: "];
vulnerable_7 -> vulnerable_8  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_9  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_9  [key=1, label="DDG: "];
vulnerable_8 -> vulnerable_10  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_57  [key=0, label="AST: "];
vulnerable_8 -> vulnerable_15  [key=0, label="CFG: "];
vulnerable_8 -> vulnerable_15  [key=1, label="DDG: "];
vulnerable_8 -> vulnerable_37  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_28  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_34  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_51  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_54  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_21  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_30  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_45  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_23  [key=0, label="DDG: "];
vulnerable_8 -> vulnerable_46  [key=0, label="DDG: "];
vulnerable_9 -> vulnerable_57  [key=0, label="DDG: "];
vulnerable_10 -> vulnerable_11  [key=0, label="AST: "];
vulnerable_10 -> vulnerable_12  [key=0, label="AST: "];
vulnerable_10 -> vulnerable_13  [key=0, label="AST: "];
vulnerable_10 -> vulnerable_18  [key=0, label="AST: "];
vulnerable_10 -> vulnerable_37  [key=0, label="AST: "];
vulnerable_10 -> vulnerable_42  [key=0, label="AST: "];
vulnerable_11 -> fixed_105  [key=0];
vulnerable_12 -> fixed_105  [key=0];
vulnerable_13 -> vulnerable_14  [key=0, label="AST: "];
vulnerable_13 -> vulnerable_15  [key=0, label="AST: "];
vulnerable_13 -> vulnerable_24  [key=0, label="CFG: "];
vulnerable_13 -> vulnerable_57  [key=0, label="DDG: mutt_b64_decode(buffer, encoded)"];
vulnerable_13 -> vulnerable_57  [key=1, label="DDG: len = mutt_b64_decode(buffer, encoded)"];
vulnerable_13 -> vulnerable_21  [key=0, label="DDG: len"];
vulnerable_14 -> fixed_105  [key=0];
vulnerable_15 -> vulnerable_16  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_17  [key=0, label="AST: "];
vulnerable_15 -> vulnerable_13  [key=0, label="CFG: "];
vulnerable_15 -> vulnerable_13  [key=1, label="DDG: buffer"];
vulnerable_15 -> vulnerable_13  [key=2, label="DDG: encoded"];
vulnerable_15 -> vulnerable_57  [key=0, label="DDG: encoded"];
vulnerable_15 -> vulnerable_46  [key=0, label="DDG: buffer"];
vulnerable_16 -> fixed_105  [key=0];
vulnerable_17 -> fixed_105  [key=0];
vulnerable_18 -> vulnerable_19  [key=0, label="AST: "];
vulnerable_18 -> vulnerable_27  [key=0, label="AST: "];
vulnerable_19 -> vulnerable_20  [key=0, label="AST: "];
vulnerable_19 -> vulnerable_31  [key=0, label="CFG: "];
vulnerable_19 -> vulnerable_31  [key=1, label="CDG: "];
vulnerable_19 -> vulnerable_38  [key=0, label="CFG: "];
vulnerable_19 -> vulnerable_57  [key=0, label="DDG: TEST_CHECK(len == sizeof(clear) - 1)"];
vulnerable_19 -> vulnerable_57  [key=1, label="DDG: !TEST_CHECK(len == sizeof(clear) - 1)"];
vulnerable_19 -> vulnerable_30  [key=0, label="CDG: "];
vulnerable_19 -> vulnerable_34  [key=0, label="CDG: "];
vulnerable_19 -> vulnerable_28  [key=0, label="CDG: "];
vulnerable_20 -> vulnerable_21  [key=0, label="AST: "];
vulnerable_20 -> vulnerable_19  [key=0, label="CFG: "];
vulnerable_20 -> vulnerable_19  [key=1, label="DDG: len == sizeof(clear) - 1"];
vulnerable_20 -> vulnerable_57  [key=0, label="DDG: len == sizeof(clear) - 1"];
vulnerable_21 -> vulnerable_22  [key=0, label="AST: "];
vulnerable_21 -> vulnerable_23  [key=0, label="AST: "];
vulnerable_21 -> vulnerable_20  [key=0, label="CFG: "];
vulnerable_21 -> vulnerable_20  [key=1, label="DDG: len"];
vulnerable_21 -> vulnerable_20  [key=2, label="DDG: sizeof(clear) - 1"];
vulnerable_21 -> vulnerable_57  [key=0, label="DDG: len"];
vulnerable_21 -> vulnerable_57  [key=1, label="DDG: sizeof(clear) - 1"];
vulnerable_21 -> vulnerable_34  [key=0, label="DDG: len"];
vulnerable_22 -> fixed_105  [key=0];
vulnerable_23 -> vulnerable_24  [key=0, label="AST: "];
vulnerable_23 -> vulnerable_26  [key=0, label="AST: "];
vulnerable_23 -> vulnerable_21  [key=0, label="CFG: "];
vulnerable_23 -> vulnerable_21  [key=1, label="DDG: 1"];
vulnerable_24 -> vulnerable_25  [key=0, label="AST: "];
vulnerable_24 -> vulnerable_23  [key=0, label="CFG: "];
vulnerable_25 -> fixed_105  [key=0];
vulnerable_26 -> fixed_105  [key=0];
vulnerable_27 -> vulnerable_28  [key=0, label="AST: "];
vulnerable_27 -> vulnerable_34  [key=0, label="AST: "];
vulnerable_28 -> vulnerable_29  [key=0, label="AST: "];
vulnerable_28 -> vulnerable_30  [key=0, label="AST: "];
vulnerable_28 -> vulnerable_34  [key=0, label="CFG: "];
vulnerable_28 -> vulnerable_57  [key=0, label="DDG: sizeof(clear) - 1"];
vulnerable_28 -> vulnerable_57  [key=1, label="DDG: TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) - 1)"];
vulnerable_29 -> fixed_105  [key=0];
vulnerable_30 -> vulnerable_31  [key=0, label="AST: "];
vulnerable_30 -> vulnerable_33  [key=0, label="AST: "];
vulnerable_30 -> vulnerable_28  [key=0, label="CFG: "];
vulnerable_30 -> vulnerable_28  [key=1, label="DDG: 1"];
vulnerable_31 -> vulnerable_32  [key=0, label="AST: "];
vulnerable_31 -> vulnerable_30  [key=0, label="CFG: "];
vulnerable_32 -> fixed_105  [key=0];
vulnerable_33 -> fixed_105  [key=0];
vulnerable_34 -> vulnerable_35  [key=0, label="AST: "];
vulnerable_34 -> vulnerable_36  [key=0, label="AST: "];
vulnerable_34 -> vulnerable_38  [key=0, label="CFG: "];
vulnerable_34 -> vulnerable_57  [key=0, label="DDG: len"];
vulnerable_34 -> vulnerable_57  [key=1, label="DDG: TEST_MSG(&quot;Actual  : %zu&quot;, len)"];
vulnerable_35 -> fixed_105  [key=0];
vulnerable_36 -> fixed_105  [key=0];
vulnerable_37 -> vulnerable_38  [key=0, label="AST: "];
vulnerable_37 -> vulnerable_41  [key=0, label="AST: "];
vulnerable_37 -> vulnerable_46  [key=0, label="CFG: "];
vulnerable_37 -> vulnerable_46  [key=1, label="DDG: buffer[len]"];
vulnerable_37 -> vulnerable_57  [key=0, label="DDG: buffer[len]"];
vulnerable_37 -> vulnerable_57  [key=1, label="DDG: buffer[len] = '\0'"];
vulnerable_37 -> vulnerable_54  [key=0, label="DDG: buffer[len]"];
vulnerable_38 -> vulnerable_39  [key=0, label="AST: "];
vulnerable_38 -> vulnerable_40  [key=0, label="AST: "];
vulnerable_38 -> vulnerable_37  [key=0, label="CFG: "];
vulnerable_39 -> fixed_105  [key=0];
vulnerable_40 -> fixed_105  [key=0];
vulnerable_41 -> fixed_105  [key=0];
vulnerable_42 -> vulnerable_43  [key=0, label="AST: "];
vulnerable_42 -> vulnerable_50  [key=0, label="AST: "];
vulnerable_43 -> vulnerable_44  [key=0, label="AST: "];
vulnerable_43 -> vulnerable_57  [key=0, label="CFG: "];
vulnerable_43 -> vulnerable_57  [key=1, label="DDG: TEST_CHECK(strcmp(buffer, clear) == 0)"];
vulnerable_43 -> vulnerable_57  [key=2, label="DDG: !TEST_CHECK(strcmp(buffer, clear) == 0)"];
vulnerable_43 -> vulnerable_51  [key=0, label="CFG: "];
vulnerable_43 -> vulnerable_51  [key=1, label="CDG: "];
vulnerable_43 -> vulnerable_54  [key=0, label="CDG: "];
vulnerable_44 -> vulnerable_45  [key=0, label="AST: "];
vulnerable_44 -> vulnerable_43  [key=0, label="CFG: "];
vulnerable_44 -> vulnerable_43  [key=1, label="DDG: strcmp(buffer, clear) == 0"];
vulnerable_44 -> vulnerable_57  [key=0, label="DDG: strcmp(buffer, clear) == 0"];
vulnerable_45 -> vulnerable_46  [key=0, label="AST: "];
vulnerable_45 -> vulnerable_49  [key=0, label="AST: "];
vulnerable_45 -> vulnerable_44  [key=0, label="CFG: "];
vulnerable_45 -> vulnerable_44  [key=1, label="DDG: strcmp(buffer, clear)"];
vulnerable_45 -> vulnerable_44  [key=2, label="DDG: 0"];
vulnerable_45 -> vulnerable_57  [key=0, label="DDG: strcmp(buffer, clear)"];
vulnerable_46 -> vulnerable_47  [key=0, label="AST: "];
vulnerable_46 -> vulnerable_48  [key=0, label="AST: "];
vulnerable_46 -> vulnerable_45  [key=0, label="CFG: "];
vulnerable_46 -> vulnerable_45  [key=1, label="DDG: buffer"];
vulnerable_46 -> vulnerable_45  [key=2, label="DDG: clear"];
vulnerable_46 -> vulnerable_51  [key=0, label="DDG: clear"];
vulnerable_46 -> vulnerable_54  [key=0, label="DDG: buffer"];
vulnerable_47 -> fixed_105  [key=0];
vulnerable_48 -> fixed_105  [key=0];
vulnerable_49 -> fixed_105  [key=0];
vulnerable_50 -> vulnerable_51  [key=0, label="AST: "];
vulnerable_50 -> vulnerable_54  [key=0, label="AST: "];
vulnerable_51 -> vulnerable_52  [key=0, label="AST: "];
vulnerable_51 -> vulnerable_53  [key=0, label="AST: "];
vulnerable_51 -> vulnerable_54  [key=0, label="CFG: "];
vulnerable_51 -> vulnerable_57  [key=0, label="DDG: clear"];
vulnerable_51 -> vulnerable_57  [key=1, label="DDG: TEST_MSG(&quot;Expected: %s&quot;, clear)"];
vulnerable_52 -> fixed_105  [key=0];
vulnerable_53 -> fixed_105  [key=0];
vulnerable_54 -> vulnerable_55  [key=0, label="AST: "];
vulnerable_54 -> vulnerable_56  [key=0, label="AST: "];
vulnerable_54 -> vulnerable_57  [key=0, label="CFG: "];
vulnerable_54 -> vulnerable_57  [key=1, label="DDG: buffer"];
vulnerable_54 -> vulnerable_57  [key=2, label="DDG: TEST_MSG(&quot;Actual  : %s&quot;, buffer)"];
vulnerable_55 -> fixed_105  [key=0];
vulnerable_56 -> fixed_105  [key=0];
vulnerable_57 -> fixed_105  [key=0];
vulnerable_59 -> fixed_105  [key=0];
vulnerable_89 -> vulnerable_90  [key=0, label="AST: "];
vulnerable_89 -> vulnerable_90  [key=1, label="DDG: "];
vulnerable_89 -> vulnerable_92  [key=0, label="AST: "];
vulnerable_89 -> vulnerable_91  [key=0, label="AST: "];
vulnerable_89 -> vulnerable_91  [key=1, label="DDG: "];
vulnerable_89 -> vulnerable_93  [key=0, label="AST: "];
vulnerable_89 -> vulnerable_93  [key=1, label="CFG: "];
vulnerable_90 -> vulnerable_93  [key=0, label="DDG: p1"];
vulnerable_91 -> vulnerable_93  [key=0, label="DDG: p2"];
vulnerable_92 -> fixed_105  [key=0];
vulnerable_93 -> fixed_105  [key=0];
vulnerable_121 -> vulnerable_122  [key=0, label="AST: "];
vulnerable_121 -> vulnerable_122  [key=1, label="DDG: "];
vulnerable_121 -> vulnerable_124  [key=0, label="AST: "];
vulnerable_121 -> vulnerable_123  [key=0, label="AST: "];
vulnerable_121 -> vulnerable_123  [key=1, label="DDG: "];
vulnerable_121 -> vulnerable_125  [key=0, label="AST: "];
vulnerable_121 -> vulnerable_125  [key=1, label="CFG: "];
vulnerable_122 -> vulnerable_125  [key=0, label="DDG: p1"];
vulnerable_123 -> vulnerable_125  [key=0, label="DDG: p2"];
vulnerable_124 -> fixed_105  [key=0];
vulnerable_125 -> fixed_105  [key=0];
vulnerable_116 -> vulnerable_117  [key=0, label="AST: "];
vulnerable_116 -> vulnerable_117  [key=1, label="DDG: "];
vulnerable_116 -> vulnerable_119  [key=0, label="AST: "];
vulnerable_116 -> vulnerable_118  [key=0, label="AST: "];
vulnerable_116 -> vulnerable_118  [key=1, label="DDG: "];
vulnerable_116 -> vulnerable_120  [key=0, label="AST: "];
vulnerable_116 -> vulnerable_120  [key=1, label="CFG: "];
vulnerable_117 -> vulnerable_120  [key=0, label="DDG: p1"];
vulnerable_118 -> vulnerable_120  [key=0, label="DDG: p2"];
vulnerable_119 -> fixed_105  [key=0];
vulnerable_120 -> fixed_105  [key=0];
vulnerable_112 -> vulnerable_113  [key=0, label="AST: "];
vulnerable_112 -> vulnerable_113  [key=1, label="DDG: "];
vulnerable_112 -> vulnerable_114  [key=0, label="AST: "];
vulnerable_112 -> vulnerable_115  [key=0, label="AST: "];
vulnerable_112 -> vulnerable_115  [key=1, label="CFG: "];
vulnerable_113 -> vulnerable_115  [key=0, label="DDG: p1"];
vulnerable_114 -> fixed_105  [key=0];
vulnerable_115 -> fixed_105  [key=0];
vulnerable_98 -> vulnerable_99  [key=0, label="AST: "];
vulnerable_98 -> vulnerable_99  [key=1, label="DDG: "];
vulnerable_98 -> vulnerable_100  [key=0, label="AST: "];
vulnerable_98 -> vulnerable_101  [key=0, label="AST: "];
vulnerable_98 -> vulnerable_101  [key=1, label="CFG: "];
vulnerable_99 -> vulnerable_101  [key=0, label="DDG: p1"];
vulnerable_100 -> fixed_105  [key=0];
vulnerable_101 -> fixed_105  [key=0];
vulnerable_94 -> vulnerable_95  [key=0, label="AST: "];
vulnerable_94 -> vulnerable_95  [key=1, label="DDG: "];
vulnerable_94 -> vulnerable_96  [key=0, label="AST: "];
vulnerable_94 -> vulnerable_97  [key=0, label="AST: "];
vulnerable_94 -> vulnerable_97  [key=1, label="CFG: "];
vulnerable_95 -> vulnerable_97  [key=0, label="DDG: p1"];
vulnerable_96 -> fixed_105  [key=0];
vulnerable_97 -> fixed_105  [key=0];
vulnerable_84 -> vulnerable_85  [key=0, label="AST: "];
vulnerable_84 -> vulnerable_85  [key=1, label="DDG: "];
vulnerable_84 -> vulnerable_87  [key=0, label="AST: "];
vulnerable_84 -> vulnerable_86  [key=0, label="AST: "];
vulnerable_84 -> vulnerable_86  [key=1, label="DDG: "];
vulnerable_84 -> vulnerable_88  [key=0, label="AST: "];
vulnerable_84 -> vulnerable_88  [key=1, label="CFG: "];
vulnerable_85 -> vulnerable_88  [key=0, label="DDG: p1"];
vulnerable_86 -> vulnerable_88  [key=0, label="DDG: p2"];
vulnerable_87 -> fixed_105  [key=0];
vulnerable_88 -> fixed_105  [key=0];
vulnerable_78 -> vulnerable_79  [key=0, label="AST: "];
vulnerable_78 -> vulnerable_80  [key=0, label="AST: "];
vulnerable_78 -> vulnerable_80  [key=1, label="CFG: "];
vulnerable_79 -> fixed_105  [key=0];
vulnerable_80 -> fixed_105  [key=0];
vulnerable_107 -> vulnerable_108  [key=0, label="AST: "];
vulnerable_107 -> vulnerable_108  [key=1, label="DDG: "];
vulnerable_107 -> vulnerable_110  [key=0, label="AST: "];
vulnerable_107 -> vulnerable_109  [key=0, label="AST: "];
vulnerable_107 -> vulnerable_109  [key=1, label="DDG: "];
vulnerable_107 -> vulnerable_111  [key=0, label="AST: "];
vulnerable_107 -> vulnerable_111  [key=1, label="CFG: "];
vulnerable_108 -> vulnerable_111  [key=0, label="DDG: p1"];
vulnerable_109 -> vulnerable_111  [key=0, label="DDG: p2"];
vulnerable_110 -> fixed_105  [key=0];
vulnerable_111 -> fixed_105  [key=0];
fixed_105 -> fixed_106  [key=0, label="AST: "];
fixed_105 -> fixed_106  [key=1, label="DDG: "];
fixed_105 -> fixed_107  [key=0, label="AST: "];
fixed_105 -> fixed_108  [key=0, label="AST: "];
fixed_105 -> fixed_108  [key=1, label="CFG: "];
fixed_106 -> fixed_108  [key=0, label="DDG: p1"];
fixed_129 -> fixed_130  [key=0, label="AST: "];
fixed_129 -> fixed_130  [key=1, label="DDG: "];
fixed_129 -> fixed_132  [key=0, label="AST: "];
fixed_129 -> fixed_131  [key=0, label="AST: "];
fixed_129 -> fixed_131  [key=1, label="DDG: "];
fixed_129 -> fixed_133  [key=0, label="AST: "];
fixed_129 -> fixed_133  [key=1, label="CFG: "];
fixed_130 -> fixed_133  [key=0, label="DDG: p1"];
fixed_131 -> fixed_133  [key=0, label="DDG: p2"];
fixed_6 -> fixed_7  [key=0, label="AST: "];
fixed_6 -> fixed_61  [key=0, label="AST: "];
fixed_6 -> fixed_61  [key=1, label="CFG: "];
fixed_7 -> fixed_8  [key=0, label="AST: "];
fixed_8 -> fixed_9  [key=0, label="AST: "];
fixed_8 -> fixed_9  [key=1, label="DDG: "];
fixed_8 -> fixed_10  [key=0, label="AST: "];
fixed_8 -> fixed_59  [key=0, label="AST: "];
fixed_8 -> fixed_18  [key=0, label="CFG: "];
fixed_8 -> fixed_39  [key=0, label="DDG: "];
fixed_8 -> fixed_15  [key=0, label="DDG: "];
fixed_8 -> fixed_30  [key=0, label="DDG: "];
fixed_8 -> fixed_36  [key=0, label="DDG: "];
fixed_8 -> fixed_53  [key=0, label="DDG: "];
fixed_8 -> fixed_56  [key=0, label="DDG: "];
fixed_8 -> fixed_23  [key=0, label="DDG: "];
fixed_8 -> fixed_32  [key=0, label="DDG: "];
fixed_8 -> fixed_47  [key=0, label="DDG: "];
fixed_8 -> fixed_25  [key=0, label="DDG: "];
fixed_8 -> fixed_48  [key=0, label="DDG: "];
fixed_9 -> fixed_59  [key=0, label="DDG: "];
fixed_10 -> fixed_11  [key=0, label="AST: "];
fixed_10 -> fixed_12  [key=0, label="AST: "];
fixed_10 -> fixed_13  [key=0, label="AST: "];
fixed_10 -> fixed_20  [key=0, label="AST: "];
fixed_10 -> fixed_39  [key=0, label="AST: "];
fixed_10 -> fixed_44  [key=0, label="AST: "];
fixed_13 -> fixed_14  [key=0, label="AST: "];
fixed_13 -> fixed_15  [key=0, label="AST: "];
fixed_13 -> fixed_26  [key=0, label="CFG: "];
fixed_13 -> fixed_59  [key=0, label="DDG: mutt_b64_decode(buffer, encoded, sizeof(buffer))"];
fixed_13 -> fixed_59  [key=1, label="DDG: len = mutt_b64_decode(buffer, encoded, sizeof(buffer))"];
fixed_13 -> fixed_23  [key=0, label="DDG: len"];
fixed_15 -> fixed_16  [key=0, label="AST: "];
fixed_15 -> fixed_17  [key=0, label="AST: "];
fixed_15 -> fixed_18  [key=0, label="AST: "];
fixed_15 -> fixed_13  [key=0, label="CFG: "];
fixed_15 -> fixed_13  [key=1, label="DDG: buffer"];
fixed_15 -> fixed_13  [key=2, label="DDG: encoded"];
fixed_15 -> fixed_59  [key=0, label="DDG: encoded"];
fixed_15 -> fixed_48  [key=0, label="DDG: buffer"];
fixed_18 -> fixed_19  [key=0, label="AST: "];
fixed_18 -> fixed_15  [key=0, label="CFG: "];
fixed_20 -> fixed_21  [key=0, label="AST: "];
fixed_20 -> fixed_29  [key=0, label="AST: "];
fixed_21 -> fixed_22  [key=0, label="AST: "];
fixed_21 -> fixed_33  [key=0, label="CFG: "];
fixed_21 -> fixed_33  [key=1, label="CDG: "];
fixed_21 -> fixed_40  [key=0, label="CFG: "];
fixed_21 -> fixed_59  [key=0, label="DDG: TEST_CHECK(len == sizeof(clear) - 1)"];
fixed_21 -> fixed_59  [key=1, label="DDG: !TEST_CHECK(len == sizeof(clear) - 1)"];
fixed_21 -> fixed_30  [key=0, label="CDG: "];
fixed_21 -> fixed_32  [key=0, label="CDG: "];
fixed_21 -> fixed_36  [key=0, label="CDG: "];
fixed_22 -> fixed_23  [key=0, label="AST: "];
fixed_22 -> fixed_21  [key=0, label="CFG: "];
fixed_22 -> fixed_21  [key=1, label="DDG: len == sizeof(clear) - 1"];
fixed_22 -> fixed_59  [key=0, label="DDG: len == sizeof(clear) - 1"];
fixed_23 -> fixed_24  [key=0, label="AST: "];
fixed_23 -> fixed_25  [key=0, label="AST: "];
fixed_23 -> fixed_22  [key=0, label="CFG: "];
fixed_23 -> fixed_22  [key=1, label="DDG: len"];
fixed_23 -> fixed_22  [key=2, label="DDG: sizeof(clear) - 1"];
fixed_23 -> fixed_59  [key=0, label="DDG: len"];
fixed_23 -> fixed_59  [key=1, label="DDG: sizeof(clear) - 1"];
fixed_23 -> fixed_36  [key=0, label="DDG: len"];
fixed_25 -> fixed_26  [key=0, label="AST: "];
fixed_25 -> fixed_28  [key=0, label="AST: "];
fixed_25 -> fixed_23  [key=0, label="CFG: "];
fixed_25 -> fixed_23  [key=1, label="DDG: 1"];
fixed_26 -> fixed_27  [key=0, label="AST: "];
fixed_26 -> fixed_25  [key=0, label="CFG: "];
fixed_29 -> fixed_30  [key=0, label="AST: "];
fixed_29 -> fixed_36  [key=0, label="AST: "];
fixed_30 -> fixed_31  [key=0, label="AST: "];
fixed_30 -> fixed_32  [key=0, label="AST: "];
fixed_30 -> fixed_36  [key=0, label="CFG: "];
fixed_30 -> fixed_59  [key=0, label="DDG: sizeof(clear) - 1"];
fixed_30 -> fixed_59  [key=1, label="DDG: TEST_MSG(&quot;Expected: %zu&quot;, sizeof(clear) - 1)"];
fixed_32 -> fixed_33  [key=0, label="AST: "];
fixed_32 -> fixed_35  [key=0, label="AST: "];
fixed_32 -> fixed_30  [key=0, label="CFG: "];
fixed_32 -> fixed_30  [key=1, label="DDG: 1"];
fixed_33 -> fixed_34  [key=0, label="AST: "];
fixed_33 -> fixed_32  [key=0, label="CFG: "];
fixed_36 -> fixed_37  [key=0, label="AST: "];
fixed_36 -> fixed_38  [key=0, label="AST: "];
fixed_36 -> fixed_40  [key=0, label="CFG: "];
fixed_36 -> fixed_59  [key=0, label="DDG: len"];
fixed_36 -> fixed_59  [key=1, label="DDG: TEST_MSG(&quot;Actual  : %zu&quot;, len)"];
fixed_39 -> fixed_40  [key=0, label="AST: "];
fixed_39 -> fixed_43  [key=0, label="AST: "];
fixed_39 -> fixed_48  [key=0, label="CFG: "];
fixed_39 -> fixed_48  [key=1, label="DDG: buffer[len]"];
fixed_39 -> fixed_59  [key=0, label="DDG: buffer[len]"];
fixed_39 -> fixed_59  [key=1, label="DDG: buffer[len] = '\0'"];
fixed_39 -> fixed_56  [key=0, label="DDG: buffer[len]"];
fixed_40 -> fixed_41  [key=0, label="AST: "];
fixed_40 -> fixed_42  [key=0, label="AST: "];
fixed_40 -> fixed_39  [key=0, label="CFG: "];
fixed_44 -> fixed_45  [key=0, label="AST: "];
fixed_44 -> fixed_52  [key=0, label="AST: "];
fixed_45 -> fixed_46  [key=0, label="AST: "];
fixed_45 -> fixed_59  [key=0, label="CFG: "];
fixed_45 -> fixed_59  [key=1, label="DDG: TEST_CHECK(strcmp(buffer, clear) == 0)"];
fixed_45 -> fixed_59  [key=2, label="DDG: !TEST_CHECK(strcmp(buffer, clear) == 0)"];
fixed_45 -> fixed_53  [key=0, label="CFG: "];
fixed_45 -> fixed_53  [key=1, label="CDG: "];
fixed_45 -> fixed_56  [key=0, label="CDG: "];
fixed_46 -> fixed_47  [key=0, label="AST: "];
fixed_46 -> fixed_45  [key=0, label="CFG: "];
fixed_46 -> fixed_45  [key=1, label="DDG: strcmp(buffer, clear) == 0"];
fixed_46 -> fixed_59  [key=0, label="DDG: strcmp(buffer, clear) == 0"];
fixed_47 -> fixed_48  [key=0, label="AST: "];
fixed_47 -> fixed_51  [key=0, label="AST: "];
fixed_47 -> fixed_46  [key=0, label="CFG: "];
fixed_47 -> fixed_46  [key=1, label="DDG: strcmp(buffer, clear)"];
fixed_47 -> fixed_46  [key=2, label="DDG: 0"];
fixed_47 -> fixed_59  [key=0, label="DDG: strcmp(buffer, clear)"];
fixed_48 -> fixed_49  [key=0, label="AST: "];
fixed_48 -> fixed_50  [key=0, label="AST: "];
fixed_48 -> fixed_47  [key=0, label="CFG: "];
fixed_48 -> fixed_47  [key=1, label="DDG: buffer"];
fixed_48 -> fixed_47  [key=2, label="DDG: clear"];
fixed_48 -> fixed_53  [key=0, label="DDG: clear"];
fixed_48 -> fixed_56  [key=0, label="DDG: buffer"];
fixed_52 -> fixed_53  [key=0, label="AST: "];
fixed_52 -> fixed_56  [key=0, label="AST: "];
fixed_53 -> fixed_54  [key=0, label="AST: "];
fixed_53 -> fixed_55  [key=0, label="AST: "];
fixed_53 -> fixed_56  [key=0, label="CFG: "];
fixed_53 -> fixed_59  [key=0, label="DDG: clear"];
fixed_53 -> fixed_59  [key=1, label="DDG: TEST_MSG(&quot;Expected: %s&quot;, clear)"];
fixed_56 -> fixed_57  [key=0, label="AST: "];
fixed_56 -> fixed_58  [key=0, label="AST: "];
fixed_56 -> fixed_59  [key=0, label="CFG: "];
fixed_56 -> fixed_59  [key=1, label="DDG: buffer"];
fixed_56 -> fixed_59  [key=2, label="DDG: TEST_MSG(&quot;Actual  : %s&quot;, buffer)"];
fixed_91 -> fixed_92  [key=0, label="AST: "];
fixed_91 -> fixed_92  [key=1, label="DDG: "];
fixed_91 -> fixed_95  [key=0, label="AST: "];
fixed_91 -> fixed_93  [key=0, label="AST: "];
fixed_91 -> fixed_93  [key=1, label="DDG: "];
fixed_91 -> fixed_96  [key=0, label="AST: "];
fixed_91 -> fixed_96  [key=1, label="CFG: "];
fixed_91 -> fixed_94  [key=0, label="AST: "];
fixed_91 -> fixed_94  [key=1, label="DDG: "];
fixed_92 -> fixed_96  [key=0, label="DDG: p1"];
fixed_93 -> fixed_96  [key=0, label="DDG: p2"];
fixed_94 -> fixed_96  [key=0, label="DDG: p3"];
fixed_124 -> fixed_125  [key=0, label="AST: "];
fixed_124 -> fixed_125  [key=1, label="DDG: "];
fixed_124 -> fixed_127  [key=0, label="AST: "];
fixed_124 -> fixed_126  [key=0, label="AST: "];
fixed_124 -> fixed_126  [key=1, label="DDG: "];
fixed_124 -> fixed_128  [key=0, label="AST: "];
fixed_124 -> fixed_128  [key=1, label="CFG: "];
fixed_125 -> fixed_128  [key=0, label="DDG: p1"];
fixed_126 -> fixed_128  [key=0, label="DDG: p2"];
fixed_119 -> fixed_120  [key=0, label="AST: "];
fixed_119 -> fixed_120  [key=1, label="DDG: "];
fixed_119 -> fixed_122  [key=0, label="AST: "];
fixed_119 -> fixed_121  [key=0, label="AST: "];
fixed_119 -> fixed_121  [key=1, label="DDG: "];
fixed_119 -> fixed_123  [key=0, label="AST: "];
fixed_119 -> fixed_123  [key=1, label="CFG: "];
fixed_120 -> fixed_123  [key=0, label="DDG: p1"];
fixed_121 -> fixed_123  [key=0, label="DDG: p2"];
fixed_114 -> fixed_115  [key=0, label="AST: "];
fixed_114 -> fixed_115  [key=1, label="DDG: "];
fixed_114 -> fixed_117  [key=0, label="AST: "];
fixed_114 -> fixed_116  [key=0, label="AST: "];
fixed_114 -> fixed_116  [key=1, label="DDG: "];
fixed_114 -> fixed_118  [key=0, label="AST: "];
fixed_114 -> fixed_118  [key=1, label="CFG: "];
fixed_115 -> fixed_118  [key=0, label="DDG: p1"];
fixed_116 -> fixed_118  [key=0, label="DDG: p2"];
fixed_101 -> fixed_102  [key=0, label="AST: "];
fixed_101 -> fixed_102  [key=1, label="DDG: "];
fixed_101 -> fixed_103  [key=0, label="AST: "];
fixed_101 -> fixed_104  [key=0, label="AST: "];
fixed_101 -> fixed_104  [key=1, label="CFG: "];
fixed_102 -> fixed_104  [key=0, label="DDG: p1"];
fixed_97 -> fixed_98  [key=0, label="AST: "];
fixed_97 -> fixed_98  [key=1, label="DDG: "];
fixed_97 -> fixed_99  [key=0, label="AST: "];
fixed_97 -> fixed_100  [key=0, label="AST: "];
fixed_97 -> fixed_100  [key=1, label="CFG: "];
fixed_98 -> fixed_100  [key=0, label="DDG: p1"];
fixed_86 -> fixed_87  [key=0, label="AST: "];
fixed_86 -> fixed_87  [key=1, label="DDG: "];
fixed_86 -> fixed_89  [key=0, label="AST: "];
fixed_86 -> fixed_88  [key=0, label="AST: "];
fixed_86 -> fixed_88  [key=1, label="DDG: "];
fixed_86 -> fixed_90  [key=0, label="AST: "];
fixed_86 -> fixed_90  [key=1, label="CFG: "];
fixed_87 -> fixed_90  [key=0, label="DDG: p1"];
fixed_88 -> fixed_90  [key=0, label="DDG: p2"];
fixed_80 -> fixed_81  [key=0, label="AST: "];
fixed_80 -> fixed_82  [key=0, label="AST: "];
fixed_80 -> fixed_82  [key=1, label="CFG: "];
fixed_109 -> fixed_110  [key=0, label="AST: "];
fixed_109 -> fixed_110  [key=1, label="DDG: "];
fixed_109 -> fixed_112  [key=0, label="AST: "];
fixed_109 -> fixed_111  [key=0, label="AST: "];
fixed_109 -> fixed_111  [key=1, label="DDG: "];
fixed_109 -> fixed_113  [key=0, label="AST: "];
fixed_109 -> fixed_113  [key=1, label="CFG: "];
fixed_110 -> fixed_113  [key=0, label="DDG: p1"];
fixed_111 -> fixed_113  [key=0, label="DDG: p2"];
}
